<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sce.PlayStation.HighLevel.UI</name>
    </assembly>
    <members>
        <member name="T:Sce.PlayStation.HighLevel.UI.AnimationImageBox">
            <summary>画像切り替えによるアニメーションの表示ウィジェット</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Widget">
            <summary>ウィジェットの基底クラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.Dispose">
            <summary>このウィジェット、および子ウィジェットの所有するアンマネージドリソースを解放する</summary>
            <remarks>このウィジェットとそのツリー以下のすべてのウィジェット、およびそれぞれの RootUIElement のツリーに所属するすべての UIElement を再帰的に解放します。
            一度 Dispose() が呼ばれたウィジェットは再利用することはできません。
            ウィジェット派生クラスでツリーに所属しないウィジェットやUIElement、その他の Dispose が必要なオブジェクトを作成した場合は、 DisposeSelf() をオーバーライドしてそれらの Dispose を呼ばなければなりません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.Dispose(System.Boolean)">
            <summary>このウィジェット、および子ウィジェットの所有するアンマネージドリソースを解放する</summary>
            <remarks>親ウィジェットから自身を削除し、子ウィジェットに対して DisposeSelf() を再帰的に呼び出します。
            派生クラスでDisposeを実装する場合は DisposeSelf() をオーバーライドしてください。</remarks>
            <param name="disposing">Dispose() から呼び出された場合 true</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.DisposeSelf">
            <summary>このウィジェットの所有するアンマネージドリソースを解放する</summary>
            <remarks>このメソッドは Dispose() からその子ウィジェットに対して再帰的に呼び出されます。
            ウィジェット派生クラスでツリーに所属しないウィジェットやUIElement、その他の Dispose が必要なオブジェクトを作成した場合は、 このメソッドをオーバーライドしてそれらの Dispose を呼ばなければなりません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SetPosition(System.Single,System.Single)">
            <summary>親の座標系での位置を設定する。</summary>
            <param name="x">親の座標系でのX座標</param>
            <param name="y">親の座標系でのY座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SetSize(System.Single,System.Single)">
            <summary>サイズを設定する。</summary>
            <param name="width">幅</param>
            <param name="height">高さ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.AddChildFirst(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを先頭に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.AddChildLast(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを末尾に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.InsertChildBefore(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直前に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="nextChild">挿入する子ウィジェットの直後となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.InsertChildAfter(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直後に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="prevChild">挿入する子ウィジェットの直前となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.RemoveChild(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定された子ウィジェットを削除する。</summary>
            <param name="child">削除する子ウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>キーイベントハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SearchNextTreeNodeFocus(System.Boolean)">
            <summary>ウィジェットツリーの順番で、次にフォーカスが当たるものを探す</summary>
            <remarks>ツリーの終端までいったら先頭から探す</remarks>
            <param name="reverse">true: 逆順で探す</param>
            <returns>次のウィジェット</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SetFocus(System.Boolean)">
            <summary>自分自身にフォーカスをあてる</summary>
            <param name="active">true: フォーカスをアクティブにする false: 現状維持</param>
            <remarks>Focusable、Visible、Enabledプロパティおよび表示範囲内にあるかにかかわらずフォーカスを設定します。
            active を true に設定した場合でも、所属するSceneがフォーカス対象のSceneでない場合はフォーカスがアクティブになりません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.belongTo(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定したウィジェットの子孫かどうかを取得する</summary>
            <remarks>自分自身を指定した場合はfalse</remarks>
            <param name="w">親となるウィジェット</param>
            <returns>true: 所属する</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SearchNextFocus(Sce.PlayStation.HighLevel.UI.FourWayDirection)">
            <summary>次にフォーカスの当たるウィジェットを探す</summary>
            <param name="direction">方向キーの方向</param>
            <returns>見つからない場合は null</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SearchNextFocusFromChild(Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>自分の子ウィジェット（子孫を含む）の中から次にフォーカスの当たるウィジェットを探す</summary>
            <remarks>自分自身は検索対象から除きます。</remarks>
            <param name="direction">方向キーの方向</param>
            <param name="currentFocusWidget">現在フォーカスのあるウィジェット</param>
            <returns>見つからない場合は null</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnMotionEvent(Sce.PlayStation.HighLevel.UI.MotionEvent)">
            <summary>モーションイベントハンドラ</summary>
            <param name="motionEvent">モーションイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.HitTest(Sce.PlayStation.Core.Vector2)">
            <summary>指定した座標でこのウィジェットがヒットするかどうかを取得する</summary>
            <param name="screenPoint">スクリーン座標系での位置</param>
            <returns>ヒットしている場合はtrue。ヒットしていない場合はfalse。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ResetState(System.Boolean)">
            <summary>自分以下の全ウィジェットの状態をリセットする。</summary>
            <param name="includeSelf">自分をリセットする場合はtrue。自分をリセットしない場合はfalse。</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ConvertScreenToLocal(Sce.PlayStation.Core.Vector2)">
            <summary>指定した座標をスクリーン座標系からローカル座標系に変換する。</summary>
            <returns>ローカル座標系に変換された座標</returns>
            <param name='screenPoint'>スクリーン座標系の座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ConvertScreenToLocal(System.Single,System.Single)">
            <summary>指定した座標をスクリーン座標系からローカル座標系に変換する。</summary>
            <returns>ローカル座標系に変換された座標</returns>
            <param name='screenX'>スクリーン座標系の座標 X</param>
            <param name='screenY'>スクリーン座標系の座標 Y</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ConvertLocalToScreen(Sce.PlayStation.Core.Vector2)">
            <summary>指定した座標をローカル座標系からスクリーン座標系に変換する。</summary>
            <returns>スクリーン座標系に変換された座標</returns>
            <param name='localPoint'>ーカル座標系の座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ConvertLocalToScreen(System.Single,System.Single)">
            <summary>指定した座標をローカル座標系からスクリーン座標系に変換する。</summary>
            <returns>スクリーン座標系に変換された座標</returns>
            <param name='localX'>ローカル座標系の座標 X</param>
            <param name='localY'>ローカル座標系の座標 Y</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ConvertLocalToOtherWidget(Sce.PlayStation.Core.Vector2,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した座標を自身のローカル座標系から他のWidgetのローカル座標系に変換する。</summary>
            <returns>targetWidget のローカル座標系に変換された座標</returns>
            <param name='targetWidget'>変換先の Widget</param>
            <param name='localPoint'>自身のローカル座標系の座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ConvertLocalToOtherWidget(System.Single,System.Single,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した座標を自身のローカル座標系から他のWidgetのローカル座標系に変換する。</summary>
            <returns>targetWidget のローカル座標系に変換された座標</returns>
            <param name='targetWidget'>変換先の Widget</param>
            <param name='x'>自身のローカル座標系の座標 X</param>
            <param name='y'>自身のローカル座標系の座標 Y</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SetupClipArea(System.Boolean)">
            <summary>最終的なクリップ領域を構築する。</summary>
            <returns>表示領域が存在する場合はtrue、表示領域が存在しない場合はfalse。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.SetupFinalAlpha">
            <summary>最終的なアルファ値を計算する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.RenderToTexture(Sce.PlayStation.Core.Graphics.Texture2D)">
            <summary>テクスチャへ描画する。</summary>
            <param name="texture">2Dのテクスチャ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.RenderToTexture(Sce.PlayStation.Core.Graphics.Texture2D,Sce.PlayStation.Core.Matrix4)">
            <summary>テクスチャへ描画する。</summary>
            <param name="texture">2Dのテクスチャ</param>
            <param name="transform">変換行列</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.RenderToFrameBuffer(Sce.PlayStation.Core.Graphics.FrameBuffer)">
            <summary>フレームバッファへ描画する。</summary>
            <param name="frameBuffer">フレームバッファ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.RenderToFrameBuffer(Sce.PlayStation.Core.Graphics.FrameBuffer,Sce.PlayStation.Core.Matrix4)">
            <summary>フレームバッファへ描画する。</summary>
            <param name="frameBuffer">フレームバッファ</param>
            <param name="transform">変換行列</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.AddGestureDetector(Sce.PlayStation.HighLevel.UI.GestureDetector)">
            <summary>ジェスチャー検出機構を追加する。</summary>
            <param name="gestureDetector">ジェスチャ検出機構</param>
            <exception cref="T:System.ArgumentNullException">GestureDetectorがnull</exception>
            <returns>追加できたかどうか</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.RemoveGestureDetector(Sce.PlayStation.HighLevel.UI.GestureDetector)">
            <summary>ジェスチャ検出機能を削除する。</summary>
            <param name="gestureDetector">ジェスチャ検出機構</param>
            <exception cref="T:System.ArgumentNullException">GestureDetectorがnull</exception>
            <returns>削除できたかどうか</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.ToString">
            <summary>文字列を返す</summary>
            <returns>"Name : 型名" 形式の文字列（Nameプロパティが設定されている場合）</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnFocusChanged(Sce.PlayStation.HighLevel.UI.FocusChangedEventArgs)">
            <summary>このウィジェットがフォーカスを取得または喪失したときに呼び出される</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Widget.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Disposed">
            <summary>すでにDisposeされたかどうかを取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Name">
            <summary>ウィジェットの名前を取得・設定する。</summary>
            <remarks>このプロパティはアプリケーションで任意に使用可能。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.RootUIElement">
            <summary>エレメントツリーのルートを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.X">
            <summary>親の座標系でのX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Y">
            <summary>親の座標系でのY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Transform3D">
            <summary>親の座標系への変換行列を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Alpha">
            <summary>透明度を取得・設定する。（０～１）</summary>
            <remarks>すべての子Widgetに透明度が乗算されて表示される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.PivotType">
            <summary>ウィジェットの原点を取得・設定する。</summary>
            <remarks>移動、回転、スケーリングするときの中心となる点。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.ZSort">
            <summary>Zソートするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.ZSortOffset">
            <summary>Zソートオフセットを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Anchors">
            <summary>親のリサイズ時にどこを固定するかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Visible">
            <summary>表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.TouchResponse">
            <summary>子ウィジェットも含めてタッチイベントに応答するかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Clip">
            <summary>子要素(Widget、UIElement)をクリップするかどうかを取得・設定する。</summary>
            <remarks>クリップ領域は2次元の座標として計算される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.HookChildTouchEvent">
            <summary>子ウィジェットのタッチイベントをフックするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.LinkedTree">
            <summary>ウィジェットツリーを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Parent">
            <summary>親ウィジェットを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Children">
            <summary>子ウィジェットを取得する。</summary>
            <remarks>コレクションを反復処理する列挙子を返す。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Widget.TouchEventReceived">
            <summary>タッチイベントを受け取ったときに呼び出されるハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Widget.KeyEventReceived">
            <summary>キーイベントを受け取ったときに呼び出されるハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Widget.PreviewKeyEventReceived">
            <summary>事前キーイベントを受け取ったときに呼び出されるハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Widget.MotionEventReceived">
            <summary>モーションイベントを受け取ったときに呼び出されるハンドラ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.LocalKeyReceiverWidget">
            @internal
            <summary></summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Focused">
            <summary>現在自分にフォーカスが当たっているかどうかを取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.ParentScene">
            <summary>所属しているシーン</summary>
            <remarks>シーンに所属していない場合は null</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.LocalToWorld">
            <summary>ローカル座標系からワールド座標系に変換する行列を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.PriorityHit">
            <summary>優先してタッチに反応するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Focusable">
            <summary>フォーカスが当たるかどうかを取得・設定する</summary>
            <remarks>親ウィジェットが false でも、子ウィジェットが true であれば子ウィジェットにフォーカスが当たる可能性があります。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.FocusCustomSettings">
            <summary>フォーカスの設定情報を取得・設定する</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Widget.FocusChanged">
            <summary>このウィジェットがフォーカスを取得または喪失したときに呼び出されるイベント</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.FocusStyle">
            <summary>フォーカスの表示スタイルを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Pressable">
            <summary>タッチやキーでプレスできるかどうかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.PressState">
            <summary>このウィジェットが押されているかどうかの状態を取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.TouchLeaveBehavior">
            <summary>タッチが領域の内側から外側に移動した場合のプレス状態の挙動を取得・設定する</summary>
            <remarks>この値は Pressable プロパティがtrueの場合のみ有効です。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Widget.Enabled">
            <summary>機能を有効にするかどうかを取得・設定する</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationImageBox.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationImageBox.Start">
            <summary>アニメーションを開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationImageBox.Stop">
            <summary>アニメーションを停止する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationImageBox.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationImageBox.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.AnimationImageBox.FrameWidth">
            <summary>１フレームあたりの画像の幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.AnimationImageBox.FrameHeight">
            <summary>１フレームあたりの画像の高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.AnimationImageBox.FrameCount">
            <summary>フレームの総数を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.AnimationImageBox.FrameInterval">
            <summary>フレーム更新間隔を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.AnimationImageBox.Image">
            <summary>画像を取得・設定する。</summary>
            <remarks>画像はフレーム順に「左から右へ」「上から下へ」並べて指定する。２次元で並べる場合は横方向優先とする。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect">
            <summary>ウィジェットが上から落ちてきて少し跳ねて止まるエフェクト</summary>
            <remarks>"Little Big Planet"のメニュー画面風エフェクト</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Effect">
            <summary>ウィジェットまたはエレメントに適用するアニメーションの基底クラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.Start">
            <summary>エフェクトを開始する。</summary>
            <remarks>開始中(Playing==true)、一時停止中(Paused==true)は何も行いません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.Update(System.Single)">
            <summary>エフェクトを更新する。</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.Stop">
            <summary>エフェクトを停止する</summary>
            <remarks>エフェクトが停止中の場合は何も行いません。
            一時停止中の場合は停止させます。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.Pause">
            <summary>エフェクトを中断する</summary>
            <remarks>エフェクトが再生中(Playing==true)でなければ何も行いません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.Resume">
            <summary>エフェクトを再開する</summary>
            <remarks>エフェクトが一時停止中(Paused==true)でなければ何も行いません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.OnStart">
            <summary>開始処理</summary>
            <remarks>派生クラスで開始処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
            <remarks>派生クラスで更新処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.OnStop">
            <summary>停止処理</summary>
            <remarks>派生クラスで停止処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.OnPause">
            <summary>中断処理</summary>
            <remarks>派生クラスで中断処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.OnResume">
            <summary>再開処理</summary>
            <remarks>派生クラスで再開処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Effect.OnRepeat">
            <summary>リピート処理</summary>
            <remarks>派生クラスでリピート処理を実装する。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Effect.TotalElapsedTime">
            <summary>エフェクトを開始してからの経過時間を取得する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Effect.Playing">
            <summary>エフェクト中かどうかを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Effect.Paused">
            <summary>エフェクトが中断されているかどうかを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Effect.Repeating">
            <summary>エフェクトをリピート再生するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Effect.Widget">
            <summary>エフェクト対象のウィジェットを取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Effect.EffectStopped">
            <summary>エフェクトを停止したときに呼び出されるハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="elasticity">弾性率（０～１）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="elasticity">弾性率（０～１）</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.Elasticity">
            <summary>弾性率を取得・設定する。（０～１）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.TargetX">
            <summary>親の座標系での落下位置のX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.BunjeeJumpEffect.TargetY">
            <summary>親の座標系での落下位置のY座標を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.BusyIndicator">
            <summary>進行状況を表示するウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BusyIndicator.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BusyIndicator.#ctor(System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="autoStart">初期化直後にアニメーションを開始するかどうか。初期値はFalse。</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BusyIndicator.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BusyIndicator.Start">
            <summary>アニメーションを開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.BusyIndicator.Stop">
            <summary>アニメーションを停止する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.BusyIndicator.Width">
            <summary>幅を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.BusyIndicator.Height">
            <summary>高さを取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ButtonStyle">
            <summary>ボタンの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ButtonStyle.Default">
            <summary>デフォルト</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ButtonStyle.Custom">
            <summary>カスタマイズ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Button">
            <summary>ボタンウィジェット</summary>
            <remarks>アイコン画像と１行テキストを設定することが可能。形状のカスタマイズが可能。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Button.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Button.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Button.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Button.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.Text">
            <summary>文字列を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.Style">
            <summary>ボタンの種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.IconImage">
            <summary>アイコン画像を取得・設定する。</summary>
            <remarks>nullが設定された場合、設定されている文字列を表示する。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.TextFont">
            <summary>文字列のフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.TextTrimming">
            <summary>文字列のトリミング方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.TextColor">
            <summary>文字列の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.TextShadow">
            <summary>文字列の影を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.HorizontalAlignment">
            <summary>文字列またはアイコン画像の水平方向のアライメントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.VerticalAlignment">
            <summary>文字列またはアイコン画像の垂直方向のアライメントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.CustomImage">
            <summary>カスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Button.ButtonAction">
            <summary>ボタンアクション発火時に呼び出されるハンドラ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Button.BackgroundFilterColor">
            <summary>背景画像に乗算する色を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TextShadowSettings">
            <summary>文字列の影の設定情報</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TextShadowSettings.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextShadowSettings.Color">
            <summary>文字列の影の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextShadowSettings.HorizontalOffset">
            <summary>文字列の影の水平方向のオフセット位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextShadowSettings.VerticalOffset">
            <summary>文字列の影の垂直方向のオフセット位置を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.CustomButtonImageSettings">
            <summary>ボタンのカスタマイズ画像の設定情報</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CustomButtonImageSettings.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomButtonImageSettings.BackgroundNormalImage">
            <summary>通常時の背景のカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomButtonImageSettings.BackgroundPressedImage">
            <summary>押下時の背景のカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomButtonImageSettings.BackgroundDisabledImage">
            <summary>無効時の背景のカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomButtonImageSettings.BackgroundNinePatchMargin">
            <summary>背景のカスタマイズ画像の９パッチ情報を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.CheckBoxStyle">
            <summary>チェックボックスの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.CheckBoxStyle.CheckBox">
            <summary>チェックボックス</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.CheckBoxStyle.RadioButton">
            <summary>ラジオボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.CheckBoxStyle.Custom">
            <summary>カスタマイズ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.CheckBox">
            <summary>チェックボックスウィジェット</summary>
            <remarks>形状のカスタマイズが可能。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CheckBox.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CheckBox.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CheckBox.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CheckBox.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CheckBox.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CheckBox.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CheckBox.Checked">
            <summary>チェックの状態を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CheckBox.Style">
            <summary>チェックボックスの種類を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.CheckBox.CheckedChanged">
            <summary>チェックの状態が変化したときに呼ばれるハンドラ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CheckBox.CustomCheckBoxImage">
            <summary>カスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings">
            <summary>カスタマイズ画像の設定情報</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.NormalUncheckedImage">
            <summary>通常時の未チェックのカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.NormalCheckedImage">
            <summary>通常時のチェック済のカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.PressedUncheckedImage">
            <summary>押下時の未チェックのカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.PressedCheckedImage">
            <summary>押下時のチェック済のカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.DisabledUncheckedImage">
            <summary>無効時の未チェックのカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CustomCheckBoxImageSettings.DisabledCheckedImage">
            <summary>無効時のチェック済のカスタマイズ画像を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ContainerWidget">
            <summary>コンテナ機能を持つウィジェット</summary>
            <remarks>子ウィジェットを追加することができ、ウィジェットの親子関係を形成することができる。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ContainerWidget.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ContainerWidget.AddChildFirst(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを先頭に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ContainerWidget.AddChildLast(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを末尾に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ContainerWidget.InsertChildBefore(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直前に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="nextChild">挿入する子ウィジェットの直後となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ContainerWidget.InsertChildAfter(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直後に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="prevChild">挿入する子ウィジェットの直前となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ContainerWidget.RemoveChild(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定された子ウィジェットを削除する。</summary>
            <param name="child">削除するウィジェット</param>
            <remarks>存在しないウィジェットを指定した場合は何も行われない。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ContainerWidget.Children">
            <summary>子ウィジェットを取得する。</summary>
            <remarks>コレクションを反復処理する列挙子を返す。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ContainerWidget.EnabledChildrenAnchors">
            <summary>子ウィジェットをAnchorsに従ってリサイズするかどうかの値を設定・取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ContainerWidget.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ContainerWidget.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.CrossFadeTransitionInterpolator">
            <summary>補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.CrossFadeTransitionInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.CrossFadeTransitionInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.CrossFadeTransitionInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.CrossFadeTransition">
            <summary>クロスフェードトランジション</summary>
            <remarks>古いシーンの上で、新しいシーンが透明から不透明へと変化する。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Transition">
            <summary>シーンに適用するアニメーションの基底クラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.Start">
            <summary>トランジションを開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.Stop">
            <summary>トランジションを停止する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.Update(System.Single)">
            <summary>トランジションを更新する。</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.OnStart">
            <summary>開始処理</summary>
            <remarks>派生クラスで開始処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
            <remarks>派生クラスで更新処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.OnStop">
            <summary>停止処理</summary>
            <remarks>派生クラスで停止処理を実装する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.GetCurrentSceneRenderedImage">
            <summary>CurrentScene をオフスクリーンレンダリングしたImageAssetを生成する。</summary>
            <returns>オフスクリーンレンダリングしたImageAsset</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Transition.GetNextSceneRenderedImage">
            <summary>NextScene をオフスクリーンレンダリングしたImageAssetを生成する。</summary>
            <returns>オフスクリーンレンダリングしたImageAsset</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Transition.TotalElapsedTime">
            <summary>トランジションを開始してからの経過時間を取得する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Transition.DrawOrder">
            <summary>トランジション中の描画順序を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Transition.TransitionStopped">
            <summary>トランジション終了時に呼び出されるハンドラ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Transition.NextScene">
            <summary>次に表示するシーンを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Transition.TransitionUIElement">
            <summary>トランジション中にのみ使用可能なエレメントツリーのルートを取得する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.#ctor(System.Single,Sce.PlayStation.HighLevel.UI.CrossFadeTransitionInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.CustomNextSceneInterpolator">
            <summary>NextScene カスタムの補間関数を設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.CustomCurrentSceneInterpolator">
            <summary>CurrentScene のカスタム補間関数を設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.NextSceneFront">
            <summary>NextScene を前面に表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.CrossFadeTransition.Texturize">
            <summary>トランジションの際にテクスチャ化をするかどうかを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DialogBackgroundStyle">
            <summary>ダイアログの背景の種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DialogBackgroundStyle.Default">
            <summary>デフォルト</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DialogBackgroundStyle.Custom">
            <summary>カスタマイズ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Dialog">
            <summary>モーダルダイアログ</summary>
            <remarks>任意の部品を載せることができる。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.#ctor(Sce.PlayStation.HighLevel.UI.Effect,Sce.PlayStation.HighLevel.UI.Effect)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.Show">
            <summary>ダイアログを表示する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.Show(Sce.PlayStation.HighLevel.UI.Effect)">
            <summary>ダイアログを表示する。</summary>
            <param name="effect">ダイアログを表示する時のエフェクト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.Hide">
            <summary>ダイアログを非表示にする。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.Hide(Sce.PlayStation.HighLevel.UI.Effect)">
            <summary>ダイアログを非表示にする。</summary>
            <param name="effect">ダイアログを表示する時のエフェクト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Dialog.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.ShowEffect">
            <summary>ダイアログを表示するときのエフェクトを取得・設定する。nullの場合はエフェクトを使用しない。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.HideEffect">
            <summary>ダイアログを非表示にするときのエフェクトを取得・設定する。nullの場合はエフェクトを使用しない。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.BackgroundStyle">
            <summary>ダイアログの背景の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.CustomBackgroundImage">
            <summary>ダイアログの背景画像を取得・設定する。</summary>
            <remarks>BackgroundStyle が Custom の場合のみ有効。nullを設定した場合は背景画像を表示しない。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.CustomBackgroundNinePatchMargin">
            <summary>ダイアログの背景画像の9PatchMarginを取得・設定する。</summary>
            <remarks>BackgroundStyle が Custom で CustomBackgroundImage が設定されている場合のみ有効。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.CustomBackgroundColor">
            <summary>ダイアログの背景色を取得・設定する。</summary>
            <remarks>BackgroundStyle が Custom の場合のみ有効。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.BackgroundFilterColor">
            <summary>背景画像に乗算する色を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Dialog.Showing">
            <summary>ダイアログが表示されるときに発行するイベント</summary>
            <remarks>ShowEffectが設定されている場合は、Effectが開始される前に発行する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Dialog.Shown">
            <summary>ダイアログが表示されたときに発行するイベント</summary>
            <remarks>ShowEffectが設定されている場合は、Effectが終了したときに発行する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Dialog.Hiding">
            <summary>ダイアログが消えるときに発行するイベント</summary>
            <remarks>HideEffectが設定されている場合は、Effectが開始される前に発行する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Dialog.Hidden">
            <summary>ダイアログが消えたときに発行するイベント</summary>
            <remarks>HideEffectが設定されている場合は、Effectが終了したときに発行する。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.HideOnTouchOutside">
            <summary>ダイアログの外をタッチされたときにダイアログを閉じるかどうか</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.DefaultFocusWidget">
            <summary>最初にフォーカスが当たるウィジェット</summary>
            <remarks>nullの場合は既定のウィジェットになります。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Dialog.Result">
            <summary>ダイアログ結果を取得・設定する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DialogEventArgs">
            <summary>ダイアログイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DialogEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.DialogResult)">
            <summary>コンストラクタ</summary>
            <param name="result">ダイアログ結果</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DialogEventArgs.CancelHide">
            <summary>Hide処理をキャンセルするかどうかを設定する</summary>
            <remarks>Hidingイベントでこのプロパティをtrueにすると、ダイアログの閉じる処理をキャンセルすることができます。
            このプロパティは、Hiddenイベントでは無視されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DialogEventArgs.Result">
            <summary>ダイアログ結果</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DialogResult">
            <summary>ダイアログ結果</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DialogResult.Ok">
            <summary>OK</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DialogResult.Cancel">
            <summary>キャンセル</summary>
            <remarks>この値は、明示的に設定された場合以外に、Backボタンおよびダイアログの外をタッチしてダイアログを閉じた場合に設定されます。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Scene">
            <summary>画面</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.OnUpdate(System.Single)">
            <summary>毎フレームの更新処理のハンドラ</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.OnShowing">
            <summary>画面が表示されるときに呼ばれるイベントハンドラ</summary>
            <remarks>Transitionが設定されている場合は、Transitionが開始される前に呼ばれる。Overrideする場合はメソッド内で基本クラスのメソッドを呼び出すこと。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.OnShown">
            <summary>画面が表示されたとき発行するイベントハンドラ</summary>
            <remarks>Transitionが設定されている場合は、Transitionが終了したときに呼ばれる。Overrideする場合はメソッド内で基本クラスのメソッドを呼び出すこと。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.ResetFocus(System.Boolean,System.Boolean)">
            @internal
            <summary>画面が切り替わった時などにフォーカスをリセットする</summary>
            <param name="setFocusActive">true: 強制的にFocusをActiveにする, false:FocusActiveは変えない</param>
            <param name="useDefaultFocusWidget">true: DefaultFocusWidgetが設定されていたらフォーカスをDefaultFocusWidgetに設定する</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.OnHiding">
            <summary>画面が消えるときに呼ばれるイベントハンドラ</summary>
            <remarks>Transitionが設定されている場合は、Transitionが開始される前に呼ばれる。Overrideする場合はメソッド内で基本クラスのメソッドを呼び出すこと。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Scene.OnHidden">
            <summary>画面が消えたときに呼ばれるイベントハンドラ</summary>
            <remarks>Transitionが設定されている場合は、Transitionが終了したときに呼ばれる。Overrideする場合はメソッド内で基本クラスのメソッドを呼び出すこと。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.Title">
            <summary>シーンのタイトルを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.RootWidget">
            <summary>ウィジェットツリーのルートを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.Transition">
            <summary>トランジションを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.ShowNavigationBar">
            <summary>ナビゲーションバーを表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.Visible">
            <summary>表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.DesignWidth">
            <summary>レイアウト用のシーンの初期幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.DesignHeight">
            <summary>レイアウト用のシーンの初期高さを取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Scene.Updated">
            <summary>毎フレームの更新時のイベント</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.FocusActive">
            <summary>このシーンがアクティブかどうかを取得する</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Scene.Showing">
            <summary>画面が表示されるときに発行するイベント</summary>
            <remarks>Transitionが設定されている場合は、Transitionが開始される前に発行する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Scene.Shown">
            <summary>画面が表示されたときに発行するイベント</summary>
            <remarks>Transitionが設定されている場合は、Transitionが終了したときに発行する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Scene.Hiding">
            <summary>画面が消えるときに発行するイベント</summary>
            <remarks>Transitionが設定されている場合は、Transitionが開始される前に発行する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Scene.Hidden">
            <summary>画面が消えたときに発行するイベント</summary>
            <remarks>Transitionが設定されている場合は、Transitionが終了したときに発行する。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.FocusWidget">
            <summary>現在このシーンでフォーカスが当たっているウィジェットを取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Scene.DefaultFocusWidget">
            <summary>最初にフォーカスが当たるウィジェット</summary>
            <remarks>nullの場合は既定のウィジェットになります。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DelayedExecutor">
            <summary>ある時間が経過した後に処理を行うエフェクト</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DelayedExecutor.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DelayedExecutor.#ctor(System.Single,System.Action)">
            <summary>コンストラクタ</summary>
            <param name="time">遅延時間（ミリ秒）</param>
            <param name="action">動作させる処理</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DelayedExecutor.CreateAndStart(System.Single,System.Action)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="time">遅延時間（ミリ秒）</param>
            <param name="action">動作させる処理</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DelayedExecutor.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DelayedExecutor.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DelayedExecutor.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DelayedExecutor.Time">
            <summary>遅延時間を取得・設定する。（ミリ秒）</summary>
            <remarks>処理の実行タイミングは、設定した時間が経過した後の最初のフレームになる。0の場合は次のフレームとなる。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DelayedExecutor.Action">
            <summary>動作させる処理のデリゲートを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector">
            <summary>ダブルタップ検出器</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.GestureDetector">
            <summary>ジェスチャ検出機構の基底クラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GestureDetector.OnResetState">
            <summary>ジェスチャ検出の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GestureDetector.State">
            <summary>GestureDetectorの状態を取得する。</summary>
            <remarks>前回のOnTouchEventで返却されたGestureDetectorResponseを取得することができる。OnResetStateが呼ばれるとNoneが設定される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GestureDetector.TargetWidget">
            <summary>ジェスチャ検出対象のウィジェットを取得する</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.OnResetState">
            <summary>ジェスチャ解析の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.MaxDistance">
            <summary>最初のdownの位置からの最大許容距離を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.MaxPressDuration">
            <summary>downからupまでの最大時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.MaxNextPressDuration">
            <summary>upからdownまでの最大時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.DoubleTapGestureDetector.DoubleTapDetected">
            <summary>ダブルタップイベントハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DoubleTapEventArgs">
            <summary>ダブルタップイベント引数</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.GestureEventArgs">
            <summary>ジェスチャイベント引数の基底クラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GestureEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GestureEventArgs.Source">
            <summary>イベント発生元ウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DoubleTapEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2)">
            <summary>コンストラクタ</summary>
            <param name="source">イベント発生元ウィジェット</param>
            <param name="worldPosition">ワールド（スクリーン）座標系での位置</param>
            <param name="localPosition">ローカル座標系での位置</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DoubleTapEventArgs.WorldPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DoubleTapEventArgs.LocalPosition">
            <summary>ローカル座標系での位置を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DragGestureDetector">
            <summary>ドラッグ検出器</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DragGestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DragGestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DragGestureDetector.OnResetState">
            <summary>ジェスチャ解析の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DragGestureDetector.MaxDistance">
            <summary>最大移動距離を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DragGestureDetector.Direction">
            <summary>ドラッグジェスチャの判定方向を取得・設定する</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.DragGestureDetector.DragDetected">
            <summary>ドラッグイベントハンドラ</summary>
            <remarks>初回のDragDetectedイベントはDragStartDetectedイベントの次のフレームから発行されます。
            ドラッグ操作が開始すると、タッチアップか他のジェスチャディテクタによって終了させられるまで、移動距離にかかわらず毎フレーム発行します。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.DragGestureDetector.DragStartDetected">
            <summary>ドラッグ開始のイベントハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.DragGestureDetector.DragEndDetected">
            <summary>ドラッグ終了のイベントハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DragDirection">
            <summary>DragGestureの判定方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DragDirection.All">
            <summary>全方向判定する</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DragDirection.Vertical">
            <summary>垂直方向のみ判定する</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DragDirection.Horizontal">
            <summary>水平方向のみ判定する</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DragDirection.LimitedVertical">
            <summary>垂直方向のみ判定し、水平方向に移動した場合はその時点で判定を終了する</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.DragDirection.LimitedHorizontal">
            <summary>水平方向のみ判定し、垂直方向に移動した場合はその時点で判定を終了する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DragEventArgs">
            <summary>ドラッグイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DragEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2)">
            <summary>コンストラクタ</summary>
            <param name="source">イベント発生元ウィジェット</param>
            <param name="worldPosition">ワールド（スクリーン）座標系での位置</param>
            <param name="localPosition">ローカル座標系での位置</param>
            <param name="distance">移動距離</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DragEventArgs.WorldPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DragEventArgs.LocalPosition">
            <summary>ローカル座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DragEventArgs.Distance">
            <summary>前回のイベントからの移動距離（ベクトル）を取得する</summary>
            <remarks>この値は、DragGestureDetector.DetectDirection の値に関係なく、水平垂直両方向の移動距離となります。
            DragStartDetectedイベントではタッチダウン位置からの距離、DragDetectedイベントでは1フレーム前のタッチ位置からの距離となります。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PopupList">
            <summary>複数の選択肢から１つを選択するためのウィジェット</summary>
            <remarks>モーダルダイアログでリストが表示される</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupList.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupList.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupList.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.ListTitle">
            <summary>リストのタイトルを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.Font">
            <summary>文字列のフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.TextColor">
            <summary>文字列の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.TextShadow">
            <summary>文字列の影の情報を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.TextTrimming">
            <summary>文字列のトリミング方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.ListItemFont">
            <summary>リストアイテムのフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.ListItemTextColor">
            <summary>リストアイテムのテキストカラーを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.ListTitleFont">
            <summary>リストタイトルのフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.ListTitleTextColor">
            <summary>リストタイトルのテキストカラーを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.SelectedIndex">
            <summary>選択されたListItemのIndex</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupList.ListItems">
            <summary>リストのアイテムの文字列を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.PopupList.SelectionChanged">
            <summary>選択中のアイテムが変わったときに呼ばれるイベント</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.PopupList.ListItemsChanged">
            <summary>ListItemsプロパティの内容が変更されたときに呼ばれるイベント</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListPanelItem">
            <summary>リストのアイテム用のコンテナウィジェット</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Panel">
            <summary>コンテナの機能を持つウィジェット</summary>
            <remarks>背景色を設定することができる</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Panel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Panel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Panel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Panel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Panel.BackgroundColor">
            <summary>背景色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Panel.Clip">
            <summary>子ウィジェエットをクリップするかどうかを取得・設定する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanelItem.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanelItem.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanelItem.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItem.Width">
            <summary>幅を取得・設定する。</summary>
            <remarks>ListPanelクラスからのみ値を変更することができる。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItem.Height">
            <summary>高さを取得・設定する。</summary>
            <remarks>具象クラスまたはコールバックからのみ値を変更することができる。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItem.Index">
            <summary>リスト全体でのインデックスを取得する。</summary>
            <remarks>初期値は-1</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItem.IndexInSection">
            <summary>セクション内でのインデックスを取得する。</summary>
            <remarks>ListPanelでのみ使用する。初期値は-1</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItem.SectionIndex">
            <summary>セクションのインデックスを取得する。</summary>
            <remarks>ListPanelでのみ使用する。初期値は-1</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupList.PopupListPanelItem.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PopupListItemCollection">
            <summary>PopupListのListItems用コレクション</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>コンストラクタ</summary>
            <param name='items'>初期値</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>複数の項目を末尾に追加する</summary>
            <param name="items">追加する項目のリスト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>指定したインデックスの位置に複数の項目を挿入する。</summary>
            <param name="index">挿入する位置のインデックス。</param>
            <param name="items">挿入する項目のリスト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.IndexOf(System.String)">
            <summary>指定した項目のインデックスを取得する。</summary>
            <param name="item">検索する文字列</param>
            <returns>検索する文字列が存在する場合はそのインデックス。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Insert(System.Int32,System.String)">
            <summary>指定したインデックスの位置に項目を挿入する。</summary>
            <param name="index">挿入する位置のインデックス。</param>
            <param name="item">挿入する項目</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある項目を削除する。</summary>
            <param name="index">削除する項目のインデックス</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.GetEnumerator">
            <summary>コレクションを反復処理する列挙子を返す。</summary>
            <returns>コレクションを反復処理するために使用できるIEnumeratorオブジェクト</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>コレクションを反復処理する列挙子を返す。</summary>
            <returns>コレクションを反復処理するために使用できるIEnumeratorオブジェクト</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Add(System.String)">
            <summary>項目</summary>
            <param name="item">項目</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Clear">
            <summary>すべての項目を削除する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Contains(System.String)">
            <summary>すべての項目を削除する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.CopyTo(System.String[],System.Int32)">
            <summary>項目を配列にコピーする。</summary>
            <param name="array">項目がコピーされるString配列</param>
            <param name="arrayIndex">コピーの開始位置となる配列のインデックス</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Remove(System.String)">
            <summary>最初に見つかった特定の項目を削除する。</summary>
            <param name="item">削除する項目</param>
            <returns>削除するセクションが存在する場合はtrue。それ以外の場合はfalse。</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Item(System.Int32)">
            <summary>指定したインデックスにある項目を取得・設定する。</summary>
            <param name="index">項目のインデックス</param>
            <returns>指定したインデックスにある項目</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.Count">
            <summary>項目数を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupListItemCollection.IsReadOnly">
            <summary>読み取り専用かどうかを取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PopupSelectionChangedEventArgs">
            <summary>PopupList の選択中のアイテムが変わったときに呼ばれるイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupSelectionChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>PopupList の選択中のアイテムが変わったときのイベント</summary>
            <param name="oldIndex">前回選択されていたアイテムのインデックス</param>
            <param name="newIndex">今回選択されていたアイテムのインデックス</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupSelectionChangedEventArgs.OldIndex">
            <summary>前回選択されていたアイテムのインデックス</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PopupSelectionChangedEventArgs.NewIndex">
            <summary>今回選択されていたアイテムのインデックス</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PopupListItemsChangedEventArgs">
            <summary>PopupListのListItemsChangedイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PopupListItemsChangedEventArgs.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.EditableText">
            <summary>編集可能なテキストウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.EditableText.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.EditableText.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.EditableText.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.EditableText.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.EditableText.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.Text">
            <summary>文字列を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.EditableText.TextChanged">
            <summary>Textプロパティが変更された場合に発行するイベント</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.Font">
            <summary>文字列のフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.TextColor">
            <summary>文字列の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.DefaultText">
            <summary>デフォルトの文字列を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.DefaultFont">
            <summary>デフォルトの文字列のフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.DefaultTextColor">
            <summary>デフォルトの文字列の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.TextShadow">
            <summary>文字列の影を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.HorizontalAlignment">
            <summary>文字列またはアイコン画像の水平方向のアライメントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.VerticalAlignment">
            <summary>文字列またはアイコン画像の垂直方向のアライメントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.LineBreak">
            <summary>文字列の改行方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.TextTrimming">
            <summary>文字列のトリミング方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.LineGap">
            <summary>行間を取得・設定する。</summary>
            <remarks>初期値は０</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.EditableText.TextInputMode">
            <summary>テキスト入力の動作モードを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TextChangedEventArgs">
            <summary>テキストを変更したときのイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TextChangedEventArgs.#ctor(System.String,System.String)">
            <summary>コンストラクタ</summary>
            <param name="oldText">変更前のテキスト</param>
            <param name="newText">変更後のテキスト</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextChangedEventArgs.NewText">
            <summary>変更後のテキスト</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextChangedEventArgs.OldText">
            <summary>変更前のテキスト</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FourWayDirection">
            <summary>上下左右の４つ方向</summary>
            <remarks>エフェクトの移動方向などに使用される。</remarks>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FourWayDirection.Up">
            <summary>上方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FourWayDirection.Down">
            <summary>下方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FourWayDirection.Left">
            <summary>左方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FourWayDirection.Right">
            <summary>右方向</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.EffectUpdateResponse">
            <summary>エフェクトの更新の応答</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.EffectUpdateResponse.Continue">
            <summary>エフェクトの更新を継続する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.EffectUpdateResponse.Finish">
            <summary>エフェクトの更新を終了する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FadeInEffectInterpolator">
            <summary>FadeInEffect用の補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FadeInEffectInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FadeInEffectInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FadeInEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FadeInEffect">
            <summary>フェードインエフェクト</summary>
            <remarks>透明から不透明（設定されているアルファ値）まで変化する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeInEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeInEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FadeInEffectInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクトの対象となるウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeInEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FadeInEffectInterpolator)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="interpolator">補間関数</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeInEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeInEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeInEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FadeInEffect.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FadeInEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FadeInEffect.CustomInterpolator">
            <summary>カスタムの補間関数を設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FadeOutEffectInterpolator">
            <summary>FadeOutEffect用の補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FadeOutEffectInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FadeOutEffectInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FadeOutEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FadeOutEffect">
            <summary>フェードアウトエフェクト</summary>
            <remarks>不透明（設定されているアルファ値）から透明まで変化する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeOutEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeOutEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FadeOutEffectInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクトの対象となるウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeOutEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FadeOutEffectInterpolator)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクトの対象となるウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeOutEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeOutEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FadeOutEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FadeOutEffect.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FadeOutEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FadeOutEffect.CustomInterpolator">
            <summary>カスタムの補間関数を設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlickDirection">
            <summary>フリックの方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlickDirection.All">
            <summary>全方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlickDirection.Vertical">
            <summary>垂直方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlickDirection.Horizontal">
            <summary>水平方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlickDirection.Virtical">
            @internal
            <summary></summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlickGestureDetector">
            <summary>フリック検出器</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.OnResetState">
            <summary>ジェスチャ解析の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.MinSpeed">
            <summary>フリックとして判定する最小速度を取得・設定する。（ピクセル/秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.MaxSpeed">
            <summary>フリック速度の最大値を取得・設定する。（ピクセル/秒）</summary>
            <remarks>FlickDetectedイベント発生時にフリック速度の絶対値がこの値以上であった場合、フリック速度にこの値が設定されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.Direction">
            <summary>検出するフリックの方向を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.FlickGestureDetector.FlickDetected">
            <summary>フリックイベントハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlickEventArgs">
            <summary>フリックイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlickEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2)">
            <summary>コンストラクタ</summary>
            <param name="source">イベント発生元ウィジェット</param>
            <param name="worldPosition">ワールド（スクリーン）座標系での位置</param>
            <param name="localPosition">ローカル座標系での位置</param>
            <param name="flickSpeed">フリックの速度</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlickEventArgs.WorldPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlickEventArgs.LocalPosition">
            <summary>ローカル座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlickEventArgs.Speed">
            <summary>フリックの速度を取得する。（ピクセル/秒）</summary>
            <remarks>この値は、FlickGestureDetector.Direction の値にかかわらず、水平垂直両方向の速度ベクトルとなります。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlipBoardEffectInterpolator">
            <summary>FlipBoardEffect用の補間関数の種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlipBoardEffectInterpolator.Default">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlipBoardEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlipBoardEffect">
            <summary>真ん中で折れるエフェクト</summary>
            <remarks>裏に新しいウィジェットが現れる。空港の掲示板風表現</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>コンストラクタ</summary>
            <param name="currentWidget">表示中のウィジェット</param>
            <param name="nextWidget">次に表示するウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="currentWidget">表示中のウィジェット</param>
            <param name="nextWidget">次に表示するウィジェット</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.NextWidget">
            <summary>次に表示するウィジェットを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.CustomInterpolator">
            <summary>カスタムの補間関数を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardEffect.Time">
            <summary>アニメーションの時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlipBoardTransitionInterpolator">
            <summary>FlipBoardTransition用の補間関数の種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlipBoardTransitionInterpolator.Default">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FlipBoardTransitionInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FlipBoardTransition">
            <summary>真ん中で折れるトランジション</summary>
            <remarks>裏に新しいシーンが現れる。空港の掲示板風表現</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.CustomInterpolator">
            <summary>カスタムの補間関数を設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FlipBoardTransition.Time">
            <summary>アニメーションの時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.GestureDetectorResponse">
            <summary>GestureDetectorのタッチイベント配信応答</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GestureDetectorResponse.None">
            <summary>初期状態</summary>
            <remarks>Systemで設定する値なのでOnTouchEventの戻り値では使用しないこと。OnTouchEventの戻り値で使用した場合はFailedAndStopと同じ扱いとする。</remarks>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GestureDetectorResponse.UndetectedAndContinue">
            <summary>ジェスチャ未検出。タッチイベント配信は継続。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GestureDetectorResponse.DetectedAndContinue">
            <summary>ジェスチャ検出済。タッチイベント配信は継続。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GestureDetectorResponse.DetectedAndStop">
            <summary>ジェスチャ検出済。タッチイベント配信は終了。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GestureDetectorResponse.FailedAndStop">
            <summary>ジェスチャ検出失敗。タッチイベント配信は終了。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.GridListScrollOrientation">
            <summary>スクロール方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GridListScrollOrientation.Horizontal">
            <summary>水平方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.GridListScrollOrientation.Vertical">
            <summary>垂直方向</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.GridListPanel">
            <summary>複数の行と列を持つリストウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.#ctor(Sce.PlayStation.HighLevel.UI.GridListScrollOrientation)">
            <summary>コンストラクタ</summary>
            <param name="scrollOrientation">スクロール方向</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.StartItemRequest">
            <summary>アイテムの要求を開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.GetListItem(System.Int32)">
            <summary>指定したインデックスのアイテムを取得する。</summary>
            <param name="index">アイテムのインデックス</param>
            <returns>アイテム（nullが返ることがある。）</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.ScrollTo(System.Int32,System.Single,System.Boolean)">
            <summary>指定したアイテムの位置までスクロールする。</summary>
            <param name="itemIndex">アイテムのインデックス</param>
            <param name="pixelOffset">アイテムのずれ（ピクセル）</param>
            <param name="withAnimation">アニメーションするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.ScrollTo(System.Int32,System.Boolean)">
            <summary>指定したアイテムの位置までスクロールする。</summary>
            <param name="itemIndex">アイテムのインデックス</param>
            <param name="withAnimation">アニメーションするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.SetListItemCreator(Sce.PlayStation.HighLevel.UI.ListItemCreator)">
            <summary>アイテムを作成するメソッドを登録する。</summary>
            <param name="creator">アイテムを作成するメソッド</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.GridListPanel.SetListItemUpdater(Sce.PlayStation.HighLevel.UI.ListItemUpdater)">
            <summary>アイテムを更新するメソッドを登録する。</summary>
            <param name="updater">アイテムを更新するメソッド</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ScrollOrientation">
            <summary>スクロール方向を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.BackgroundColor">
            <summary>背景色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemWidth">
            <summary>アイテムの幅を取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">アイテムの幅とアイテムの列間の合計がリストの幅より大きい</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemHeight">
            <summary>アイテムの高さを取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">アイテムの高さとアイテムの行間の合計がリストの高さより大きい</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemVerticalGap">
            <summary>アイテムの行間を取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">アイテムの行間とアイテムの高さの合計がリストの高さより大きい</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemHorizontalGap">
            <summary>アイテムの列間を取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">アイテムの列間とアイテムの幅の合計がリストの幅より大きい</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ScrollBarVisibility">
            <summary>スクロールバーの見え方を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.SnapScroll">
            <summary>アイテムごとに停止するかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemIndex">
            <summary>表示領域の左上のアイテムのインデックスを取得する。</summary>
            <remarks>アイテムは行間と列間を含む。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemPixelOffset">
            <summary>表示領域の左上のアイテムのずれを取得する。（ピクセル）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.GridListPanel.ItemCount">
            <summary>アイテムの総数を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.GridListPanel.SelectItemChanged">
            <summary>アイテムが選択された場合に呼び出されるイベント</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.GridListPanel.Scrolling">
            <summary>スクロール中に呼び出されるハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ImageAsset">
            <summary>画像アセットクラス</summary>
            <remarks>テクスチャの読み込みなどを隠蔽するクラスです。
            画像ファイルの非同期の読み込みやキャッシュをサポートします。
            画像ファイルから ImageAsset を作成した場合は、テクスチャがキャッシュされます。
            このキャッシュにより、同一ファイル名の ImageAsset を作成した場合、テクスチャのアンマネージドリソースは共有されます。
            なお、キャッシュは Dispose やガーベージコレクションだけでは解放されません。
            使用しなくなった ImageAsset は UnloadFromCache を呼び出したあと、同一画像ファイルのImageAssetすべての Dispose を呼び出してください。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(System.String,System.Boolean)">
            <summary>指定した画像ファイルから新しいインスタンスを生成する</summary>
            <remarks>一度読み込むとキャッシュされます。使用しなくなった場合は UnloadFromCache を呼び出してください。</remarks>
            <param name="filename">画像ファイル名</param>
            <param name="asyncLoad">非同期で読み込むかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(System.String)">
            <summary>指定した画像ファイルから新しいインスタンスを生成する</summary>
            <remarks>同期で読み込みます。一度読み込むとキャッシュされます。使用しなくなった場合は UnloadFromCache を呼び出してください。</remarks>
            <param name="filename">画像ファイル名</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.HighLevel.UI.SystemImageAsset)">
            <summary>指定したシステム画像アセットの新しいインスタンスを生成する</summary>
            <remarks>標準のウィジェットなどに使用される画像アセットです。非同期で読み込みます。</remarks>
            <param name="name">システム画像アセット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.Core.Graphics.Texture2D)">
            <summary>指定した既存のテクスチャから新しいインスタンスを生成する</summary>
            <remarks>キャッシュはされません。ImageAsset内ではテクスチャの ShallowClone を保持するため、引数で指定したテクスチャのインスタンスは必要に応じて Dispose してください。</remarks>
            <param name="texture">テクスチャ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.Core.Imaging.Image,Sce.PlayStation.Core.Graphics.PixelFormat)">
            <summary>指定した既存のイメージから新しいインスタンスを生成する</summary>
            <remarks>キャッシュはされません。引数で指定したイメージのインスタンスは必要に応じて Dispose してください。</remarks>
            <param name="image">既存の画像</param>
            <param name="format">指定した既存の画像のピクセルフォーマット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.Core.Imaging.Image)">
            <summary>指定した既存のイメージから新しいインスタンスを生成する</summary>
            <remarks>キャッシュはされません。引数で指定したイメージのインスタンスは必要に応じて Dispose してください。</remarks>
            <param name="image">既存の画像</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>指定した画像ファイルから新しいインスタンスを生成する</summary>
            <remarks>一度読み込むとキャッシュされます。使用しなくなった場合は UnloadFromCache を呼び出してください。</remarks>
            <param name="filename">画像ファイル名</param>
            <param name="asyncLoad">非同期で読み込むかどうか</param>
            <param name="scaledPixelDensity">ピクセル密度に応じてスケールするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.Core.Graphics.Texture2D,System.Boolean)">
            <summary>指定した既存のテクスチャから新しいインスタンスを生成する</summary>
            <remarks>キャッシュはされません。ImageAsset内ではテクスチャの ShallowClone を保持するため、引数で指定したテクスチャのインスタンスは必要に応じて Dispose してください。</remarks>
            <param name="texture">テクスチャ</param>
            <param name="scaledPixelDensity">ピクセル密度に応じてスケールするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.Core.Imaging.Image,Sce.PlayStation.Core.Graphics.PixelFormat,System.Boolean)">
            <summary>指定した既存のイメージから新しいインスタンスを生成する</summary>
            <remarks>キャッシュはされません。引数で指定したイメージのインスタンスは必要に応じて Dispose してください。</remarks>
            <param name="image">既存の画像</param>
            <param name="format">指定した既存の画像のピクセルフォーマット</param>
            <param name="scaledPixelDensity">ピクセル密度に応じてスケールするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.#ctor(Sce.PlayStation.Core.Imaging.Image,System.Boolean)">
            <summary>指定した既存のイメージから新しいインスタンスを生成する</summary>
            <remarks>キャッシュはされません。引数で指定したイメージのインスタンスは必要に応じて Dispose してください。</remarks>
            <param name="image">既存の画像</param>
            <param name="scaledPixelDensity">ピクセル密度に応じてスケールするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.CloneTexture">
            <summary>テクスチャの複製を取得</summary>
            <remarks>テクスチャのShallowCloneを返します。非同期読み込みで、まだテクスチャの読み込みが完了していない場合はnullを返します。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.WaitForLoad">
            <summary>ファイルが読み込まれるまで待機する</summary>
            <remarks>同期で読み込んだ場合やすでに読み込みが完了している場合はすぐに戻ります。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.Dispose">
            <summary>使用されているリソースを解放する</summary>
            <remarks>このインスタンスが保持しているテクスチャの Dispose を呼びます。
            画像ファイルから読み込んだImageAssetの場合、キャッシュされているテクスチャは解放されません。
            完全に解放するためには UnloadFromCache を呼び出す必要があります。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.UnloadFromCache">
            <summary>画像ファイルから読み込んだImageAssetのキャッシュを削除する</summary>
            <remarks>キャッシュされているテクスチャを解放します。
            キャッシュ内のテクスチャのみ解放されるので、このインスタンスは引き続き使用することができます。
            対象のテクスチャのアンマネージドリソースをガーベージコレクションを待たずに解放するには、Dispose を呼ぶ必要があります。</remarks>
            <returns>false:キャッシュに存在していなかった</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.WaitForLoadAll">
            <summary>非同期で読み込んでいるすべての画像が読み込まれるまで待機する</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageAsset.UnloadFromCache(System.String)">
            <summary>ファイルから読み込んだImageAssetのキャッシュを削除する</summary>
            <param name="filename">ファイル名</param>
            <returns>false:キャッシュに存在していなかった</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageAsset.Ready">
            <summary>画像アセットの読み込みが完了したかどうかを取得する</summary>
            <remarks>画像ファイル以外や同期で読み込んだ場合は true が返ります。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageAsset.Width">
            <summary>画像アセットの幅を取得する</summary>
            <remarks>非同期読み込みでまだ読み込まれていない場合は0を返します</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageAsset.Height">
            <summary>画像アセットの高さを取得する</summary>
            <remarks>非同期読み込みでまだ読み込まれていない場合は0を返します。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageAsset.FilePath">
            <summary>画像ファイルのパスを取得する</summary>
            <remarks>ファイルから生成していない場合は null が返ります。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.AssetManager">
            @internal
            <summary>アセットの管理クラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AssetManager.LoadSystemAsset">
            <summary>システムアセットを全て読み込む。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AssetManager.LoadTexture(System.String,System.Boolean)">
            <summary>テクスチャを非同期で読み込みキャッシュする。</summary>
            <param name="isAsync"></param>
            <param name="filename">ファイル名</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AssetManager.LoadTextureFromAssembly(System.String,System.Boolean)">
            <summary>アセンブリに埋め込まれたファイルからテクスチャを非同期で読み込みキャッシュする。</summary>
            <param name="isAsync"></param>
            <param name="filename">ファイル名</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AssetManager.GetTexture(System.String)">
            <summary>テクスチャを取得する。</summary>
            <param name="filename">ファイル名</param>
            <returns>まだ読み込んでいない場合はnullを返す。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AssetManager.GetImageSize(System.String)">
            <summary>テクスチャを取得する。</summary>
            <param name="filename">ファイル名</param>
            <returns>まだ読み込んでいない場合はnullを返す。</returns>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SystemImageAsset">
            <summary>システム画像アセット</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ButtonBackgroundNormal">
            <summary>通常時のボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ButtonBackgroundPressed">
            <summary>押下時のボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ButtonBackgroundDisabled">
            <summary>無効時のボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.CheckBoxCheckedNormal">
            <summary>通常時のチェックボックス（チェック状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.CheckBoxUncheckedNormal">
            <summary>通常時のチェックボックス（未チェック状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.CheckBoxCheckedPressed">
            <summary>押下時のチェックボックス（チェック状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.CheckBoxUncheckedPressed">
            <summary>押下時のチェックボックス（未チェック状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.CheckBoxCheckedDisabled">
            <summary>無効時のチェックボックス（チェック状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.CheckBoxUncheckedDisabled">
            <summary>無効時のチェックボックス（未チェック状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.RadioButtonCheckedNormal">
            <summary>通常時のラジオボタン（選択状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.RadioButtonUncheckedNormal">
            <summary>通常時のラジオボタン（未選択状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.RadioButtonCheckedPressed">
            <summary>押下時のラジオボタン（選択状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.RadioButtonUncheckedPressed">
            <summary>押下時のラジオボタン（未選択状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.RadioButtonCheckedDisabled">
            <summary>無効時のラジオボタン（選択状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.RadioButtonUncheckedDisabled">
            <summary>無効時のラジオボタン（未選択状態）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalBaseNormal">
            <summary>有効時のスライダーのベース（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalBaseDisabled">
            <summary>無効時のスライダーのベース（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalBarNormal">
            <summary>有効時のスライダーのバー（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalBarDisabled">
            <summary>無効時のスライダーのバー（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalHandleNormal">
            <summary>通常時のスライダーのハンドル（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalHandlePressed">
            <summary>押下時のスライダーのハンドル（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderHorizontalHandleDisabled">
            <summary>無効時のスライダーのハンドル（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalBaseNormal">
            <summary>有効時のスライダーのベース（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalBaseDisabled">
            <summary>無効時のスライダーのベース（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalBarNormal">
            <summary>有効時のスライダーのバー（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalBarDisabled">
            <summary>無効時のスライダーのバー（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalHandleNormal">
            <summary>通常時のスライダーのハンドル（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalHandlePressed">
            <summary>押下時のスライダーのハンドル（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SliderVerticalHandleDisabled">
            <summary>無効時のスライダーのハンドル（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ProgressBarBase">
            <summary>プログレスバーのベース</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ProgressBarNormal">
            <summary>標準のプログレスバー</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ProgressBarAccelerator">
            <summary>アニメーション付きのプログレスバー</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ScrollBarHorizontalBackground">
            <summary>スクロールバーの背景（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ScrollBarHorizontalBar">
            <summary>スクロールバー（水平方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ScrollBarVerticalBackground">
            <summary>スクロールバーの背景（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ScrollBarVerticalBar">
            <summary>スクロールバー（垂直方向）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.EditableTextBackgroundNormal">
            <summary>有効時のエディットテキストの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.EditableTextBackgroundDisabled">
            <summary>無効時のエディットテキストの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.BusyIndicator">
            <summary>ビジーインジケータ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.DialogBackground">
            <summary>ダイアログの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.PagePanelNormal">
            <summary>非表示中のページパネルのページ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.PagePanelActive">
            <summary>表示中のページパネルのページ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ListPanelSeparatorTop">
            <summary>リストアイテムのセパレータ（上端）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ListPanelSeparatorBottom">
            <summary>リストアイテムのセパレータ（下端）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.ListPanelSectionSeparator">
            <summary>セクション</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.MessageDialogBackground">
            <summary>メッセージダイアログの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.MessageDialogSeparator">
            <summary>メッセージダイアログのセパレータ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SpinBoxBase">
            <summary>スピンボックスの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.SpinBoxCenter">
            <summary>スピンボックスの中央</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.PopupListBackgroundNormal">
            <summary>通常時のポップアップリストの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.PopupListBackgroundPressed">
            <summary>押下時のポップアップリストの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.PopupListBackgroundDisabled">
            <summary>無効時のポップアップリストの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.PopupListItemFocus">
            <summary>ポップアップリストの項目のフォーカス</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.BackButtonBackgroundNormal">
            <summary>通常時のバックボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.BackButtonBackgroundDisabled">
            <summary>無効時のバックボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.BackButtonBackgroundPressed">
            <summary>押下時のバックボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.NavigationBarBackground">
            <summary>ナビゲーションバーの背景</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.FocusRoundedCorner">
            <summary>角が丸い四角形のフォーカス</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.FocusRectangle">
            <summary>四角形のフォーカス</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.FocusCircle">
            <summary>円形のフォーカス</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SystemImageAsset.FocusListItem">
            <summary>リストアイテムのフォーカス</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ImageScaleType">
            <summary>画像のスケール</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ImageScaleType.Center">
            <summary>スケールなしで画像を中央に表示する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ImageScaleType.Stretch">
            <summary>アスペクト比を無視して埋める。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ImageScaleType.AspectInside">
            <summary>アスペクト比固定で内側に接する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ImageScaleType.AspectOutside">
            <summary>アスペクト固定で外側に接する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ImageScaleType.NinePatch">
            <summary>９パッチでスケーリングする。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ImageBox">
            <summary>画像を表示するウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageBox.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ImageBox.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.Image">
            <summary>画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.NinePatchMargin">
            <summary>画像の９パッチ情報を取得・設定する。</summary>
            <remarks>ImageScaleTypeがNinePatchの場合にのみ有効となる。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.ImageScaleType">
            <summary>画像のスケールを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.CropArea">
            <summary>画像のクリップ領域を取得・設定する。</summary>
            <remarks>全て０の場合はクリップしない。ImageScaleTypeと同時に設定されている場合クリップした画像をスケーリングする。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ImageBox.BlendMode">
            <summary>ブレンドモードを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.JumpFlipEffectAxis">
            <summary>JumpFlipEffectの回転軸</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.JumpFlipEffectAxis.X">
            <summary>X軸</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.JumpFlipEffectAxis.Y">
            <summary>Y軸</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.JumpFlipEffect">
            <summary>画面手前にジャンプし反転して切り替わるエフェクト</summary>
            <remarks>表面が古いウィジェットで裏面が新しいウィジェットとなる。それぞれ同じサイズとする。ジャンプして反転しながら新しい位置に落ちていくことも可能。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>コンストラクタ</summary>
            <param name="currentWidget">表示中のウィジェット</param>
            <param name="nextWidget">次に表示するウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="currentWidget">表示中のウィジェット</param>
            <param name="nextWidget">次に表示するウィジェット</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.NextWidget">
            <summary>次に表示するウィジェットを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.Revolution">
            <summary>回転数を取得・設定する。（半回転＝1）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.JumpHeight">
            <summary>ジャンプの高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.Time">
            <summary>エフェクトの時間を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.JumpDelay">
            <summary>回転開始までの時間を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.ToDegreeDelay">
            <summary>回転開始時の角度を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipEffect.RotationAxis">
            <summary>回転軸を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.JumpFlipTransitionSpeed">
            <summary>回転の速度</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.JumpFlipTransitionSpeed.Fast">
            <summary>高速</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.JumpFlipTransitionSpeed.Slow">
            <summary>低速</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.JumpFlipTransitionRotateDirection">
            <summary>JumpFlipの回転方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.JumpFlipTransitionRotateDirection.ClockWise">
            <summary>時計回り</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.JumpFlipTransitionRotateDirection.CounterClockWise">
            <summary>反時計回り</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.JumpFlipTransition">
            <summary>画面手前にジャンプし反転して切り替わるトランジション</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipTransition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.JumpFlipTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipTransition.Speed">
            <summary>回転の速度を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.JumpFlipTransition.RotateDirection">
            <summary>回転の方向を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.KeyEventType">
            <summary>キーイベントの種別</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyEventType.Up">
            <summary>離された</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyEventType.Down">
            <summary>押された</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyEventType.LongPress">
            <summary>長押し</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyEventType.Repeat">
            <summary>連続押し</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyEventType.EachFrameRepeat">
            <summary>毎フレームごとのリピート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyEventType.Cancel">
            <summary>キャンセル</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.KeyType">
            <summary>キーの種別</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.None">
            <summary>None</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Left">
            <summary>方向キーの左</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Up">
            <summary>方向キーの上</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Right">
            <summary>方向キーの右</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Down">
            <summary>方向キーの下</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Enter">
            <summary>Enter ボタン</summary>
            <remarks>○または×ボタン</remarks>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Back">
            <summary>Back ボタン</summary>
            <remarks>○または×ボタン</remarks>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Square">
            <summary>□ ボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Triangle">
            <summary>△ ボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Start">
            <summary>STARTボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Select">
            <summary>SELECTボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.L">
            <summary>L ボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.R">
            <summary>R ボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Circle">
            @internal
            <summary>○ ボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.KeyType.Cross">
            @internal
            <summary>× ボタン</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.KeyEvent">
            <summary>キーイベント情報</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.KeyEvent.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.KeyEvent.#ctor(Sce.PlayStation.HighLevel.UI.KeyType,Sce.PlayStation.HighLevel.UI.KeyEventType,System.TimeSpan,System.TimeSpan)">
            <summary>コンストラクタ</summary>
            <param name="keyType">キーの種別</param>
            <param name="keyEventType">キーイベントの種別</param>
            <param name="time">イベントが発生した時刻</param>
            <param name="downTime">キーが押された時刻</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.KeyEvent.#ctor(Sce.PlayStation.HighLevel.UI.KeyType,Sce.PlayStation.HighLevel.UI.KeyEventType,System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="keyType">キーの種別</param>
            <param name="keyEventType">キーイベントの種別</param>
            <param name="time">イベントが発生した時刻</param>
            <param name="downTime">キーが押された時刻</param>
            <param name="enabledEachFrame"></param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.KeyEventType">
            <summary>キーイベントの種別を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.KeyType">
            <summary>キーの種別を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.Time">
            <summary>イベントが発生した時刻を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.DownTime">
            <summary>キーが押された時刻を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.Forward">
            <summary>イベントをフォワードするかどうかを取得・設定する。初期値はFalse。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.Handled">
            <summary>イベントが処理済みかどうかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEvent.EnabledEachFrameRepeat">
            <summary>毎フレームごとのキーリピートイベントを有効にするかどうかを取得・設定する</summary>
            <remarks>この値を true に設定すると、次のフレームから KeyEventType が EachFrameRepeat のイベントが毎フレーム配信されるようになります。
            この値は現在の KeyType に対してのみ有効で、キーが押されている間は値が保持されますが、キーが離されると false にリセットされます。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.KeyEventArgs">
            <summary>キーイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.KeyEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.Time">
            <summary>イベントが発生した時刻を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.DownTime">
            <summary>キーが押された時刻を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.KeyType">
            <summary>キーの種別を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.KeyEventType">
            <summary>キーイベントの種別を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.Forward">
            <summary>キーイベント引数に含まれるキーイベントをフォワードするかどうかを取得・設定する。初期値はFalse。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.Handled">
            <summary>イベントが処理済みかどうかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.KeyEventArgs.EnabledEachFrameRepeat">
            <summary>毎フレームごとのキーリピートイベントを有効にするかどうかを取得・設定する</summary>
            <remarks>この値を true に設定すると、次のフレームから KeyEventType が EachFrameRepeat のイベントが毎フレーム配信されるようになります。
            この値は現在の KeyType に対してのみ有効で、キーが押されている間は値が保持されますが、キーが離されると false にリセットされます。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.HorizontalAlignment">
            <summary>水平方向のアラインメント</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.HorizontalAlignment.Left">
            <summary>左揃え</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.HorizontalAlignment.Center">
            <summary>中央揃え</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.HorizontalAlignment.Right">
            <summary>右揃え</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.VerticalAlignment">
            <summary>垂直方向のアラインメント</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.VerticalAlignment.Top">
            <summary>上揃え</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.VerticalAlignment.Middle">
            <summary>中央揃え</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.VerticalAlignment.Bottom">
            <summary>下揃え</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TextTrimming">
            <summary>文字列のトリミング方法</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextTrimming.None">
            <summary>トリミングなし（文字の途中で切る）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextTrimming.Character">
            <summary>文字単位でトリミング</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextTrimming.Word">
            <summary>単語単位でトリミング</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextTrimming.EllipsisCharacter">
            <summary>文字単位でトリミングして省略記号（...）を挿入</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextTrimming.EllipsisWord">
            <summary>単語単位でトリミングして省略記号（...）を挿入</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LineBreak">
            <summary>文字列の改行方法</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.LineBreak.Character">
            <summary>文字単位</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.LineBreak.Word">
            <summary>単語単位</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.LineBreak.Hyphenation">
            <summary>文字単位でハイフンを入れる。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.LineBreak.AtCode">
            <summary>改行文字で改行する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Label">
            <summary>文字列を表示するウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Label.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Label.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Label.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.Text">
            <summary>文字列を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.Font">
            <summary>文字列のフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.TextColor">
            <summary>文字列の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.TextShadow">
            <summary>文字列の影の情報を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.BackgroundColor">
            <summary>背景色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.HorizontalAlignment">
            <summary>水平方向のアラインメント取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.VerticalAlignment">
            <summary>垂直方向のアラインメントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.LineBreak">
            <summary>文字列の改行方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.TextTrimming">
            <summary>文字列のトリミング方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.LineGap">
            <summary>行間を取得・設定する。</summary>
            <remarks>初期値は０</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Label.TextHeight">
            <summary>テキストの高さ</summary>
            <remarks>現在の設定でテキストを描画した場合の複数行文字列の高さ(pixel)です。描画される文字列は現在の幅、LineBreakで折り返されます。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LinkedTree`1">
            @internal
            <summary>リストとしてツリー全体を走査することが可能なツリー</summary>
            <remarks>内部でnewを一切行わない再帰処理に頼らず全要素の処理が可能</remarks>
            <typeparam name="T">要素の型</typeparam>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.#ctor(`0)">
            <summary>コンストラクタ</summary>
            <param name="value">関連づける値</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.AddChildFirst(Sce.PlayStation.HighLevel.UI.LinkedTree{`0})">
            <summary>子要素を先頭に追加する。</summary>
            <param name="child">追加する要素</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.AddChildLast(Sce.PlayStation.HighLevel.UI.LinkedTree{`0})">
            <summary>子要素を末尾に追加する。</summary>
            <param name="child">追加する要素</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.InsertChildBefore(Sce.PlayStation.HighLevel.UI.LinkedTree{`0})">
            <summary>自身を指定した子要素の直前の要素として追加する。</summary>
            <param name="tree">直後となる子要素</param>
            <remarks>既に追加されている場合は指定した子要素の直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.InsertChildAfter(Sce.PlayStation.HighLevel.UI.LinkedTree{`0})">
            <summary>自身を指定した子要素の直後の要素として追加する。</summary>
            <param name="tree">直前となる子要素</param>
            <remarks>既に追加されている場合は指定した子要素の直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.RemoveChild">
            <summary>自身を親から削除する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LinkedTree`1.Clear">
            <summary>すべての子要素を削除する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.Value">
            <summary>関連づけられた値を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.Parent">
            <summary>親を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.PreviousAsList">
            <summary>ツリー全体をリストと見なした時の直前の要素を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.NextAsList">
            <summary>ツリー全体をリストと見なした時の直後の要素を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.PreviousSibling">
            <summary>直前の兄弟を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.NextSibling">
            <summary>直後の兄弟を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.FirstChild">
            <summary>先頭の子供を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.LastChild">
            <summary>末尾の子供を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LinkedTree`1.LastDescendant">
            <summary>自分の子孫の末尾の要素を取得する。</summary>
            <remarks>リスト処理の終端条件として使用する。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListPanel">
            <summary>複数の行を持つリストウィジェット</summary>
            <remarks>グループ化機能とインデックス機能がある。アイテムの内容を自由にカスタマイズできる。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.SetListItemCreator(Sce.PlayStation.HighLevel.UI.ListItemCreator)">
            <summary>アイテムを作成するメソッドを登録する。</summary>
            <param name="creator">アイテムを作成するメソッド</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.SetListItemUpdater(Sce.PlayStation.HighLevel.UI.ListItemUpdater)">
            <summary>アイテムを更新するメソッドを登録する。</summary>
            <param name="updater">アイテムを更新するメソッド</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.Move(System.Single)">
            <summary>指定した距離移動する。負数を指定した場合は上へ、正数を指定した場合は下へ移動する。</summary>
            <param name="moveDistance">移動距離(pixel)</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.UpdateItems">
            <summary>現在表示中のすべてのアイテムを更新する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.GetListItem(System.Int32)">
            <summary>指定したインデックスのアイテムを取得する</summary>
            <remarks>表示範囲内にないインデックスを指定した場合はnullが返されます。</remarks>
            <param name="index">リスト全体でのアイテムインデックス</param>
            <returns>アイテム</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanel.GetListItem(System.Int32,System.Int32)">
            <summary>指定したインデックスのアイテムを取得する</summary>
            <remarks>表示範囲内にないインデックスを指定した場合はnullが返されます。</remarks>
            <param name="sectionIndex">セクションのインデックス</param>
            <param name="indexInSection">セクション内でのアイテムインデックス</param>
            <returns>アイテム</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.BackgroundColor">
            <summary>背景色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.Sections">
            <summary>セクションのコレクションを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.AllItemCount">
            <summary>アイテムの総数を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.ShowSection">
            <summary>セクションを表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.ShowEmptySection">
            <summary>空のセクションを表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.ShowItemBorder">
            <summary>アイテムの境界画像を表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.ScrollBarVisibility">
            <summary>スクロールバーの見え方を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.SectionFont">
            <summary>セクションのフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.SectionTextColor">
            <summary>セクションのテキストカラーを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanel.SectionBackgroundColor">
            <summary>セクションの背景色を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.ListPanel.SelectItemChanged">
            <summary>アイテムが選択された場合に呼び出されるイベント</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListItemCreator">
            <summary>アイテムを作成するメソッドのデリゲート</summary>
            <returns>アイテム</returns>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListItemUpdater">
            <summary>アイテムを更新するメソッドのデリゲート</summary>
            <param name="item">アイテム</param>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListSection">
            <summary>リストのセクション用のコンテナ部品</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSection.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSection.#ctor(System.String,System.Int32)">
            <summary>コンストラクタ</summary>
            <param name="title">セクションのタイトル</param>
            <param name="itemCount">セクションに登録されているアイテムの数</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListSection.Title">
            <summary>セクションのタイトルを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListSection.ItemCount">
            <summary>セクションに登録されているアイテムの数を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.ListSection.ItemChanged">
            <summary>セクションに登録されているアイテムが変わった時のイベント</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListSectionCollection">
            <summary>セクションのコレクション</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.IndexOf(Sce.PlayStation.HighLevel.UI.ListSection)">
            <summary>指定したセクションのインデックスを取得する。</summary>
            <param name="section">検索するセクション</param>
            <returns>検索するセクションが存在する場合はそのインデックス。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Insert(System.Int32,Sce.PlayStation.HighLevel.UI.ListSection)">
            <summary>指定したインデックスの位置にセクションを挿入する。</summary>
            <param name="index">挿入する位置のインデックス。</param>
            <param name="section">挿入するセクション</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにあるセクションを削除する。</summary>
            <param name="index">削除するセクションのインデックス</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Add(Sce.PlayStation.HighLevel.UI.ListSection)">
            <summary>セクションを追加する。</summary>
            <param name="section">追加するセクション</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Clear">
            <summary>すべてのセクションを削除する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Contains(Sce.PlayStation.HighLevel.UI.ListSection)">
            <summary>特定のセクションが格納されているかどうかを判断する。</summary>
            <param name="section">検索するセクション</param>
            <returns>検索するセクションが存在する場合はtrueそれ以外の場合はfalse。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.CopyTo(Sce.PlayStation.HighLevel.UI.ListSection[],System.Int32)">
            <summary>セクションを配列にコピーする。</summary>
            <param name="array">セクションがコピーされる１次元の配列</param>
            <param name="arrayIndex">コピーの開始位置となる配列のインデックス</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Remove(Sce.PlayStation.HighLevel.UI.ListSection)">
            <summary>最初に見つかった特定のセクションを削除する。</summary>
            <param name="section">削除するセクション</param>
            <returns>削除するセクションが存在する場合はtrue。それ以外の場合はfalse。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.System#Collections#Generic#IEnumerable{Sce#PlayStation#HighLevel#UI#ListSection}#GetEnumerator">
            <summary>コレクションを反復処理する列挙子を返す。</summary>
            <returns>コレクションを反復処理するために使用できるIEnumeratorオブジェクト</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListSectionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>コレクションを反復処理する列挙子を返す。</summary>
            <returns>コレクションを反復処理するために使用できるIEnumeratorオブジェクト</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListSectionCollection.AllItemCount">
            <summary>セクションに登録されているアイテムの総数を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Item(System.Int32)">
            <summary>指定したインデックスにあるセクションを取得・設定する。</summary>
            <param name="index">取得するセクションのインデックス</param>
            <returns>指定したインデックスにあるセクション</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListSectionCollection.Count">
            <summary>セクションの数を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListSectionCollection.IsReadOnly">
            <summary>読み取り専用かどうかを取得する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.ListSectionCollection.ItemsChanged">
            <summary>内容が変化したときに呼び出されるハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LiveFlipPanel">
            <summary>イベントにより回転するコンテナウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.Start">
            <summary>アニメーションを開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.Stop">
            <summary>アニメーションを停止する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.Stop(System.Boolean)">
            <summary>アニメーションを停止する。</summary>
            <param name="withAnimate">アニメーションするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.FlipCount">
            <summary>回転数を取得・設定する。（半回転＝1）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.TouchEnabled">
            <summary>タッチ操作（ドラッグ、フリック）を有効にするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.FrontPanel">
            <summary>表面のパネルを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveFlipPanel.BackPanel">
            <summary>裏面のパネルを取得・設定する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LiveJumpPanel">
            <summary>子ウィジェットが画面手前にジャンプするコンテナウィジェット。</summary>
            <remarks>指定した位置に近いウィジェットから順番にジャンプさせることができます。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.Jump">
            <summary>ジャンプを開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.Jump(System.Single,System.Single)">
            <summary>ジャンプを開始する。</summary>
            <param name="x">ローカル座標系でのX座標</param>
            <param name="y">ローカル座標系でのY座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.JumpHeight">
            <summary>ジャンプする高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.JumpDelayTime">
            <summary>それぞれの子ウィジェットがジャンプするまでの遅延時間を取得・設定する。（ミリ秒/ピクセル）</summary>
            <remarks>ジャンプ中心から子ウィジェットまでの距離に対して、１ピクセルあたり何ミリ秒遅れるかを指定できる。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.JumpTime">
            <summary>各子ウィジェットがジャンプして最初に着地するまでの時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveJumpPanel.TiltAngle">
            <summary>子ウィジェットの最大傾き角度を取得・設定する。（ラジアン）</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LiveListPanel">
            <summary>アイテムが不規則な配置でスクロールするリストウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.StartItemRequest">
            <summary>アイテムの要求を開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.SetListItemCreator(Sce.PlayStation.HighLevel.UI.ListItemCreator)">
            <summary>アイテムを作成するメソッドを登録する。</summary>
            <param name="creator">アイテムを作成するメソッド</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.SetListItemUpdater(Sce.PlayStation.HighLevel.UI.ListItemUpdater)">
            <summary>アイテムを更新するメソッドを登録する。</summary>
            <param name="updater">アイテムを更新するメソッド</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveListPanel.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.BackgroundColor">
            <summary>背景色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemHeight">
            <summary>アイテムの高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemWidth">
            <summary>アイテムの高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemCount">
            <summary>アイテムの総数を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemVerticalGap">
            <summary>アイテムの行間を取得・取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ScrollBarVisibility">
            <summary>スクロールバーの見え方を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemTiltAngle">
            <summary>アイテムの最大傾き（ラジアン）。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemSlideInTime">
            <summary>項目が横から入ってくるのにかかる時間（ミリ秒）。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemSlideInHeight">
            <summary>項目が横から入ってくるときのZの高さ。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemSlideInTiltAngle">
            <summary>項目が横から入ってくるときのY軸の角度。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveListPanel.ItemSlideInOffset">
            <summary>項目が横から入ってくるときの水平方向のオフセット。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LiveScrollPanel">
            <summary>形状が歪みながらスクロールするコンテナウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.AddChildFirst(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを先頭に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.AddChildLast(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを末尾に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.InsertChildBefore(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直前に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="nextChild">挿入する子ウィジェットの直後となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.InsertChildAfter(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直後に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="prevChild">挿入する子ウィジェットの直前となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.RemoveChild(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定された子ウィジェットを削除する。</summary>
            <param name="child">削除する子ウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.OnResetState">
            <summary>状態をリセットする。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <remarks>elapsedTimeが10秒以上の場合、更新処理はスキップされます。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.Elasticity">
            <summary>ゆがみの弾性率を取得・設定する。</summary>
            <remarks>0より大きい値で、大きくなればゆれが大きくなる。初期値は1。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.PanelX">
            <summary>親の座標系でのパネルのX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.PanelY">
            <summary>親の座標系でのパネルのY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.PanelWidth">
            <summary>パネルの幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.PanelHeight">
            <summary>パネルの高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.MaxTextureWidth">
            <summary>テクスチャの幅の最大値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.MaxTextureHeight">
            <summary>テクスチャの高さの最大値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.PanelColor">
            <summary>パネルの色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.HorizontalScroll">
            <summary>水平方向のスクロールをするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.VerticalScroll">
            <summary>垂直方向のスクロールをするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveScrollPanel.Children">
            <summary>子ウィジェットを取得する。</summary>
            <remarks>コレクションを反復処理する列挙子を返す。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LiveSphere">
            <summary>球体型のウィジェット</summary>
            <remarks>フリックで回転させることが出来る。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.SetSize(System.Single,System.Single)">
            <summary>サイズを設定する。</summary>
            <remarks>球の直径は Width と Height の小さいほうの値になり、中央に表示される。</remarks>
            <param name="width">幅</param>
            <param name="height">高さ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.Start">
            <summary>回転させる。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.Stop">
            <summary>回転を止める。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.Stop(System.Boolean)">
            <summary>回転を止める</summary>
            <param name="withAnimate">停止時にスナップのアニメーションをするかどうかを決定するフラグ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSphere.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.TurnCount">
            <summary>回転数を取得・設定する。（半回転＝１）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.ZAxis">
            <summary>Z軸回転の角度(ラジアン)を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.YAxis">
            <summary>y軸回転の角度(ラジアン)を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.TouchEnabled">
            <summary>タッチ操作（ドラッグ、フリック）を有効にするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.ToggleEnabled">
            <summary>トグル操作を有効にするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.Width">
            <summary>幅を取得・設定する。</summary>
            <remarks>球の直径は Width と Height の小さいほうの値になり、中央に表示される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.Height">
            <summary>高さを取得・設定する。</summary>
            <remarks>球の直径は Width と Height の小さいほうの値になり、中央に表示される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.Image">
            <summary>画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSphere.FrontFace">
            <summary>球の前面が表示されているかどうかを取得する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.LiveSphere.ButtonAction">
            <summary>ボタンアクション発火時に呼び出されるハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector">
            <summary>ロングプレス検出器</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector.OnResetState">
            <summary>ジェスチャ解析の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector.MaxDistance">
            <summary>最初のdownの位置からの最大許容距離を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector.MinPressDuration">
            <summary>ロングプレスを検出するまでの最小時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.LongPressGestureDetector.LongPressDetected">
            <summary>ロングプレスイベントハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LongPressEventArgs">
            <summary>ロングプレスイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LongPressEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2,System.Single)">
            <summary>コンストラクタ</summary>
            <param name="source">イベント発生元ウィジェット</param>
            <param name="worldPosition">ワールド（スクリーン）座標系での位置</param>
            <param name="localPosition">ローカル座標系での位置</param>
            <param name="elapsedTime">経過時間</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LongPressEventArgs.WorldPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LongPressEventArgs.LocalPosition">
            <summary>ローカル座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LongPressEventArgs.ElapsedTime">
            <summary>経過時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MessageDialogStyle">
            <summary>メッセージダイアログの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MessageDialogStyle.Ok">
            <summary>OKボタンのメッセージダイアログ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MessageDialogStyle.OkCancel">
            <summary>OK・Cancelボタンのメッセージダイアログ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MessageDialogResult">
            <summary>メッセージダイアログのボタンの種別</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MessageDialogResult.Ok">
            <summary>OKボタン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MessageDialogResult.Cancel">
            <summary>Cancelボタン</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MessageDialog">
            <summary>警告のメッセージ等を表示するための特殊化されたモーダルダイアログ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MessageDialog.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MessageDialog.#ctor(Sce.PlayStation.HighLevel.UI.MessageDialogStyle,System.String,System.String)">
            <summary>コンストラクタ</summary>
            <param name="style">メッセージダイアログの種類</param>
            <param name="title">タイトルの文字列</param>
            <param name="message">メッセージの文字列</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MessageDialog.CreateAndShow(Sce.PlayStation.HighLevel.UI.MessageDialogStyle,System.String,System.String)">
            <summary>MessageDialog のインスタンスを生成し表示する。</summary>
            <param name="style">メッセージダイアログの種類</param>
            <param name="title">タイトルの文字列</param>
            <param name="message">メッセージの文字列</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MessageDialog.Render">
            <summary>シーングラフを描画する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MessageDialog.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialog.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialog.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialog.Message">
            <summary>メッセージを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialog.Title">
            <summary>タイトルを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialog.ShowTitle">
            <summary>タイトルを表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialog.Style">
            <summary>メッセージダイアログの種類を取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.MessageDialog.ButtonPressed">
            <summary>メッセージダイアログのボタンの押下時に呼び出されるハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MessageDialogButtonEventArgs">
            <summary>メッセージダイアログのイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MessageDialogButtonEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.MessageDialogResult)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MessageDialogButtonEventArgs.Result">
            <summary>メッセージダイアログのボタンの種別を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator">
            <summary>MoveEffect用の補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator.Overshoot">
            <summary>オーバーシュート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator.Elastic">
            <summary>振動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MoveEffect">
            <summary>現在の位置から指定した位置に移動するエフェクト</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MoveEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MoveEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,System.Single,System.Single,Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクトの対象となるウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="x">親の座標系での移動先のX座標</param>
            <param name="y">親の座標系での移動先のY座標</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MoveEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single,System.Single,System.Single,Sce.PlayStation.HighLevel.UI.MoveEffectInterpolator)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="x">親の座標系での移動先のX座標</param>
            <param name="y">親の座標系での移動先のY座標</param>
            <param name="interpolator">補間関数</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MoveEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MoveEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MoveEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MoveEffect.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MoveEffect.X">
            <summary>親の座標系での移動先のX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MoveEffect.Y">
            <summary>親の座標系での移動先のY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MoveEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MoveEffect.CustomInterpolator">
            <summary>カスタムの補間関数を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.NinePatchMargin">
            <summary>９パッチ情報を格納するための構造体</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.NinePatchMargin.Zero">
            <summary>各メンバの値が0のインスタンス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.NinePatchMargin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>コンストラクタ</summary>
            <param name="left">左方向のマージン</param>
            <param name="top">上方向のマージン</param>
            <param name="right">右方向のマージン</param>
            <param name="bottom">下方向のマージン</param>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.NinePatchMargin.Left">
            <summary>左方向のマージン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.NinePatchMargin.Top">
            <summary>上方向のマージン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.NinePatchMargin.Right">
            <summary>右方向のマージン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.NinePatchMargin.Bottom">
            <summary>下方向のマージン</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PagePanel">
            <summary>ページ単位でスクロールするコンテナウィジェット</summary>
            <remarks>複数のパネルで構成される。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.AddPage">
            <summary>末尾のページを追加する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.AddPage(Sce.PlayStation.HighLevel.UI.Panel)">
            <summary>末尾のページを追加する。</summary>
            <param name="panel">追加するPanelオブジェクト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.InsertPage(System.Int32,Sce.PlayStation.HighLevel.UI.Panel)">
            <summary>指定したページ番号の位置にパネルを挿入する。</summary>
            <param name="index">ページを挿入する位置（０～）</param>
            <param name="panel">挿入するページのPanelオブジェクト</param>
            <exception cref="T:System.ArgumentOutOfRangeException">indexが0未満かPageCountより大きい</exception>
            <exception cref="T:System.ArgumentNullException">panelがnull</exception>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.InsertPage(System.Int32)">
            <summary>指定したページ番号の位置にページを挿入する。</summary>
            <param name="index">ページを挿入する位置（０～）</param>
            <exception cref="T:System.ArgumentOutOfRangeException">indexが0未満かPageCountより大きい</exception>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.RemovePage(Sce.PlayStation.HighLevel.UI.Panel)">
            <summary>指定したページを削除する</summary>
            <param name="panel">削除するページ</param>
            <returns>panelが正常に削除された場合はtrue。それ以外はfalse。panelが見つからなかった場合もfalseを返す。</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.RemovePageAt(System.Int32)">
            <summary>指定したページ番号のページを削除する。</summary>
            <param name="index">削除するページ番号(０～)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">indexが0未満かPageCount以上</exception>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.GetPage(System.Int32)">
            <summary>指定したページのパネルを取得する。</summary>
            <param name="index">取得するページのインデックス</param>
            <returns>パネル</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.ScrollTo(System.Int32,System.Boolean)">
            <summary>指定したページの位置までスクロールする。</summary>
            <param name="index">ページのインデックス</param>
            <param name="withAnimation">アニメーションするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.OnResetState">
            <summary>状態リセットハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.OnPageIndexChanged">
            <summary>ページ番号がかわり、新しいページが表示されきった時に呼ばれる</summary>
            <remarks>連続でフリックした場合などは、アニメーションが完了した最後のタイミングで呼ばれる</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PagePanel.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PagePanel.PageCount">
            <summary>ページ数を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PagePanel.CurrentPageIndex">
            <summary>現在のページ番号を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PagePanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PagePanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PagePanel.Focusable">
            <summary>フォーカスが当たるかどうかを取得・設定する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PinchGestureDetector">
            <summary>ピンチ検出器</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.OnResetState">
            <summary>ジェスチャ解析の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.MinPinchDistance">
            <summary>最小ピンチ距離を取得・設定する。</summary>
            <remarks>2本downしてから2本の相対距離がMinPinchDirection以上変化したらピンチを検出する。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.PinchDetected">
            <summary>ピンチイベントハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.PinchStartDetected">
            <summary>ピンチ開始のイベントハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.PinchGestureDetector.PinchEndDetected">
            <summary>ピンチ終了のイベントハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PinchEventArgs">
            <summary>ピンチイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PinchEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,System.Single,System.Single,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2)">
            <summary>コンストラクタ</summary>
            <param name="source">イベント発生元ウィジェット</param>
            <param name="distance">ピンチ距離</param>
            <param name="scale">ピンチ倍率</param>
            <param name="angle">ピンチ角度</param>
            <param name="worldCenter">ピンチのワールド（スクリーン）座標系での中心座標</param>
            <param name="localCenter">ピンチのローカル座標系での中心座標</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PinchEventArgs.Distance">
            <summary>ピンチしている指間の距離を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PinchEventArgs.Scale">
            <summary>ピンチ倍率を取得する。</summary>
            <remarks>ピンチが開始された時の指間の距離を基準とした値</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PinchEventArgs.Angle">
            <summary>ピンチ角度を取得する。</summary>
            <remarks>ピンチが開始された時の指の角度を基準とした値</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PinchEventArgs.WorldCenterPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PinchEventArgs.LocalCenterPosition">
            <summary>ローカル座標系におけるピンチの中心座標を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ProgressBarStyle">
            <summary>プログレスバーの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ProgressBarStyle.Normal">
            <summary>標準</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ProgressBarStyle.Animation">
            <summary>アニメーションつき</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ProgressBar">
            <summary>進捗の度合いを表示するウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ProgressBar.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ProgressBar.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ProgressBar.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ProgressBar.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ProgressBar.Height">
            <summary>高さを取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ProgressBar.Progress">
            <summary>進捗の度合いを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ProgressBar.Style">
            <summary>プログレスバーの種類を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator">
            <summary>補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator.Overshoot">
            <summary>オーバーシュート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator.Elastic">
            <summary>振動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PushTransition">
            <summary>新しいシーンが古いシーンを押しだすトランジション</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PushTransition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PushTransition.#ctor(System.Single,Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.PushTransitionInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="direction">トランジションの移動方向</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PushTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PushTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PushTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PushTransition.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PushTransition.MoveDirection">
            <summary>トランジションの移動方向を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PushTransition.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PushTransition.CustomInterpolator">
            <summary>カスタムの補間関数を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.RootUIElement">
            <summary>エレメントツリーのルート</summary>
            <remarks>各ウィジェットが１つ持つ。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIElement">
            <summary>描画要素の基底クラス</summary>
            <remarks>各ウィジェットの下にシーングラフを構成する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.Dispose">
            <summary>このUIElement、および子UIElementの所有するアンマネージドリソースを解放する</summary>
            <remarks>このUIElementとそのツリー以下のすべてのUIElementを再帰的に解放します。
            一度 Dispose() が呼ばれたUIElementは再利用することはできません。
            UIElement派生クラスで Dispose が必要なオブジェクトを作成した場合は、 DisposeSelf() をオーバーライドしてそれらの Dispose を呼ばなければなりません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.Dispose(System.Boolean)">
            <summary>このUIElement、および子UIElementの所有するアンマネージドリソースを解放する</summary>
            <remarks>親UIElementから自身を削除し、子UIElementに対して DisposeSelf() を再帰的に呼び出します。
            派生クラスで Dispose を実装する場合は DisposeSelf() をオーバーライドしてください。</remarks>
            <param name="disposing">Dispose() から呼び出された場合 true</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.DisposeSelf">
            <summary>このUIElementの所有するアンマネージドリソースを解放する</summary>
            <remarks>このメソッドは Dispose() からその子UIElementに対して再帰的に呼び出されます。
            派生クラスで Dispose が必要なオブジェクトを作成した場合は、 このメソッドをオーバーライドしてそれらの Dispose を呼ばなければなりません。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.SetPosition(System.Single,System.Single)">
            <summary>親の座標系での位置を設定する。</summary>
            <param name="x">親の座標系でのX座標</param>
            <param name="y">親の座標系でのY座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.GetTexture">
            <summary>テクスチャを取得する</summary>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.AddChildFirst(Sce.PlayStation.HighLevel.UI.UIElement)">
            <summary>子エレメントを先頭に追加する。</summary>
            <param name="child">追加する子エレメント</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.AddChildLast(Sce.PlayStation.HighLevel.UI.UIElement)">
            <summary>子エレメントを末尾に追加する。</summary>
            <param name="child">追加する子エレメント</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.InsertChildBefore(Sce.PlayStation.HighLevel.UI.UIElement,Sce.PlayStation.HighLevel.UI.UIElement)">
            <summary>指定した子エレメントを直前に挿入する。</summary>
            <param name="child">挿入する子エレメント</param>
            <param name="nextChild">挿入する子エレメントの直後となる子エレメント</param>
            <remarks>既に追加されている場合は指定した子エレメントの直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.InsertChildAfter(Sce.PlayStation.HighLevel.UI.UIElement,Sce.PlayStation.HighLevel.UI.UIElement)">
            <summary>指定した子エレメントを直後に挿入する。</summary>
            <param name="child">挿入する子エレメント</param>
            <param name="prevChild">挿入する子エレメントの直前となる子エレメント</param>
            <remarks>既に追加されている場合は指定した子エレメントの直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.RemoveChild(Sce.PlayStation.HighLevel.UI.UIElement)">
            <summary>指定された子エレメントを削除する。</summary>
            <param name="child">削除する子エレメント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.SetupDrawState">
            <summary>描画状態を設定する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.Render">
            <summary>エレメントを描画する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.SetupFinalAlpha">
            <summary>最終的なアルファ値を計算する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIElement.SetupSortValue">
            <summary>Zソートで使用する値を設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Disposed">
            <summary>すでにDisposeされたかどうかを取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.X">
            <summary>親の座標系でのX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Y">
            <summary>親の座標系でのY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Alpha">
            <summary>透明度を取得・設定する。（０～１）</summary>
            <remarks>すべての子要素に透明度が乗算されて表示される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Visible">
            <summary>表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.TextureFilterMode">
            <summary>テクスチャフィルタのモードを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.TextureWrapMode">
            <summary>テクスチャラップのモードを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Image">
            <summary>画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.ZSort">
            <summary>Zソートするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Parent">
            <summary>親エレメントを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Children">
            <summary>子エレメントを取得する。</summary>
            <remarks>コレクションを反復処理する列挙子を返す。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.BlendMode">
            <summary>ブレンドモードを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Transform3D">
            <summary>親の座標系への変換行列を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.ZSortOffset">
            <summary>Zソートオフセットを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.Culling">
            <summary>カリングするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.ShaderType">
            <summary>シェーダープログラムを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.InternalShaderType">
            <summary>内部で使う用のシェーダータイプ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.ShaderUniforms">
            <summary>シェーダープログラムで使用するUniformのテーブルを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIElement.LocalToWorld">
            <summary>ローカル座標系からワールド座標系に変換する行列を取得する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.RootUIElement.#ctor(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.RootUIElement.SetupFinalAlpha">
            <summary>最終的なアルファ値を計算する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.RootWidget">
            <summary>ウィジェットツリーのルート</summary>
            <remarks>各シーンが１つ持つ。コンテナ機能を持つ。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.RootWidget.#ctor(Sce.PlayStation.HighLevel.UI.Scene)">
            <summary>コンストラクタ</summary>
            <param name="scene">シーン</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.RootWidget.HitTest(Sce.PlayStation.Core.Vector2)">
            <summary>通常のシーンのRootWidgetはヒットしないため常にfalseを返す</summary>
            <param name="screenPoint">スクリーン座標系での位置</param>
            <returns>通常はfalse</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.RootWidget.X">
            <summary>親の座標系でのX座標を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.RootWidget.Y">
            <summary>親の座標系でのY座標を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.RootWidget.Width">
            <summary>幅を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.RootWidget.Height">
            <summary>高さを取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.RootWidget.Transform3D">
            <summary>親の座標系への変換行列を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UpdateEventArgs">
            <summary>更新処理イベントのデータが格納されているクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UpdateEventArgs.#ctor(System.Single)">
            <summary>コンストラクタ</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UpdateEventArgs.ElapsedTime">
            <summary>前回のUpdateからの経過時間（ミリ秒）を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ScrollBarOrientation">
            <summary>スクロールバーの方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ScrollBarOrientation.Horizontal">
            <summary>水平方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ScrollBarOrientation.Vertical">
            <summary>垂直方向</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ScrollBar">
            <summary>画面のスクロール位置を把握するためのウィジェット</summary>
            <remarks>ユーザーが操作することはできない。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollBar.#ctor(Sce.PlayStation.HighLevel.UI.ScrollBarOrientation)">
            <summary>コンストラクタ</summary>
            <param name="orientation">スクロールバーの方向</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollBar.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollBar.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollBar.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollBar.Length">
            <summary>全体のサイズを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollBar.Orientation">
            <summary>スクロールバーの方向を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollBar.BarPosition">
            <summary>バーの位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollBar.BarLength">
            <summary>バーの長さを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ScrollBarVisibility">
            <summary>スクロールバーの見え方</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ScrollBarVisibility.Visible">
            <summary>常に表示</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ScrollBarVisibility.ScrollableVisible">
            <summary>スクロールできるなら表示</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ScrollBarVisibility.ScrollingVisible">
            <summary>スクロール中のみ表示</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ScrollBarVisibility.Invisible">
            <summary>常に非表示</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ScrollPanel">
            <summary>スクロール可能な領域を持つコンテナウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.AddChildFirst(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを先頭に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.AddChildLast(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを末尾に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.InsertChildBefore(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直前に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="nextChild">挿入する子ウィジェットの直後となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.InsertChildAfter(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直後に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="prevChild">挿入する子ウィジェットの直前となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.RemoveChild(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定された子ウィジェットを削除する。</summary>
            <param name="child">削除する子ウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.ScrollTo(System.Single,System.Single,System.Boolean)">
            <summary>指定した位置へスクロールする</summary>
            <remarks>スクロールできない方向は無視されます。</remarks>
            <param name='x'>右上の内部パネルのX座標。PanelX と正負が反転した値となる。</param>
            <param name='y'>右上の内部パネルのY座標。PanelY と正負が反転した値となる。</param>
            <param name='withAnimation'>アニメーションするかどうか</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ScrollPanel.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.PanelX">
            <summary>親の座標系でのパネルのX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.PanelY">
            <summary>親の座標系でのパネルのY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.PanelWidth">
            <summary>パネルの幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.PanelHeight">
            <summary>パネルの高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.PanelColor">
            <summary>パネルの色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.ScrollBarVisibility">
            <summary>スクロールバーの見え方を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.HorizontalScroll">
            <summary>水平方向のスクロールをするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.VerticalScroll">
            <summary>垂直方向のスクロールをするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.Children">
            <summary>子ウィジェットを取得する。</summary>
            <remarks>コレクションを反復処理する列挙子を返す。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ScrollPanel.Focusable">
            <summary>フォーカスが当たるかどうかを取得・設定する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ShaderType">
            <summary>シェーダープログラムの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ShaderType.SolidFill">
            <summary>単色塗り、または頂点カラーの描画</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ShaderType.Texture">
            <summary>通常のテクスチャ描画 (RGBAフォーマットのテクスチャ)</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ShaderType.TextTexture">
            <summary>テキストの描画 (Alphaフォーマットのテクスチャ)</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ShaderType.OffscreenTexture">
            <summary>オフスクリーンテクスチャの描画（RenderToTextureで描画したテクスチャ）</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.InternalShaderType">
            @internal
            <summary>シェーダープログラムの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.SolidFill">
            <summary>単色塗り</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.TextureRgba">
            <summary>テクスチャ描画</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.TextureAlpha">
            <summary>テキスト描画</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.PremultipliedTexture">
            <summary>オフスクリーンテクスチャの描画（RenderToTextureで描画したテクスチャ）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.TextureAlphaShadow">
            <summary>影付きのテキスト描画</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.LiveScrollPanel">
            <summary>LiveScrollPanel専用</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType.LiveSphere">
            <summary>LiveSphere専用</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.InternalShaderType._count">
            <summary>dummy</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ShaderProgramManager">
            @internal
            <summary>シェーダープログラムの管理を行う</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ShaderProgramManager.shaderFileName">
            <summary>シェーダープログラムのファイル名</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ShaderProgramManager.Initialize">
            <summary>初期化する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ShaderProgramManager.Terminate(Sce.PlayStation.Core.Graphics.GraphicsContext)">
            <summary>終了する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ShaderProgramManager.GetShaderProgram(Sce.PlayStation.HighLevel.UI.InternalShaderType)">
            <summary>シェーダープログラムを取得する。</summary>
            <param name="type">シェーダープログラムの種類</param>
            <returns>シェーダープログラムのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ShaderProgramManager.GetUniforms(Sce.PlayStation.HighLevel.UI.InternalShaderType)">
            <summary>Uniformのテーブルを取得する。</summary>
            <param name="type">シェーダープログラムの種類</param>
            <returns>Uniformのテーブル</returns>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator">
            <summary>SlideInEffect用の補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator.Overshoot">
            <summary>オーバーシュート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator.Elastic">
            <summary>振動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SlideInEffect">
            <summary>画面の外から現在の位置まで平行移動するエフェクト</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideInEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideInEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="direction">エフェクトの移動方向</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideInEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.SlideInEffectInterpolator)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="direction">エフェクトの移動方向</param>
            <param name="interpolator">補間関数</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideInEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideInEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideInEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideInEffect.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideInEffect.MoveDirection">
            <summary>エフェクトの移動方向を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideInEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideInEffect.CustomInterpolator">
            <summary>カスタムの補間関数を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator">
            <summary>SlideOutEffect用の補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator.Overshoot">
            <summary>オーバーシュート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator.Elastic">
            <summary>振動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SlideOutEffect">
            <summary>現在の位置から画面の外まで平行移動するエフェクト</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideOutEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideOutEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="direction">エフェクトの移動方向</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideOutEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single,Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.SlideOutEffectInterpolator)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="direction">エフェクトの移動方向</param>
            <param name="interpolator">補間関数</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideOutEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideOutEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideOutEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideOutEffect.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideOutEffect.MoveDirection">
            <summary>エフェクトの移動方向を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideOutEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideOutEffect.CustomInterpolator">
            <summary>カスタムの補間関数を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SliderOrientation">
            <summary>スライダーの方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SliderOrientation.Horizontal">
            <summary>水平方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SliderOrientation.Vertical">
            <summary>垂直方向</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Slider">
            <summary>数値などの調整を行うためのウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Slider.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Slider.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Slider.OnPreviewKeyEvent(Sce.PlayStation.HighLevel.UI.KeyEvent)">
            <summary>事前キーイベントのハンドラ</summary>
            <param name="keyEvent">キーイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Slider.DisposeSelf">
            <summary>使用されているリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Slider.OnFocusChanged(Sce.PlayStation.HighLevel.UI.FocusChangedEventArgs)">
            <summary>このウィジェットがフォーカスを取得または喪失したときに呼び出される</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.Orientation">
            <summary>スライダーの方向を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.FillValue">
            <summary>緑色のバーを表示するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.Value">
            <summary>現在の位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.MinValue">
            <summary>最小値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.MaxValue">
            <summary>最大値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.ValueChangeEventEnabled">
            <summary>現在の位置が変化したときのイベントを有効にするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.Enabled">
            <summary>機能を有効にするかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.Width">
            <summary>幅を取得・設定する。</summary>
            <remarks>OrientationがVerticalの場合、設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.Height">
            <summary>高さを取得・設定する。</summary>
            <remarks>OrientationがHorizontalの場合、設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.PriorityHit">
            <summary>優先してタッチに反応するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.Slider.Step">
            <summary>Valueの離散値</summary>
            <remarks>0を指定するとValueは連続的な値になる。正の値を指定すると、Valueのとりうる値はMinValue+Step*n（nは整数）とMaxValueになる。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Slider.ValueChanging">
            <summary>現在の位置が変化しているときに呼び出されるハンドラ</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.Slider.ValueChanged">
            <summary>現在の位置が変化したときに呼び出されるハンドラ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.Slider.HandleWidget.OnPressStateChanged(Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs)">
            <summary>プレス状態が変化したときに呼び出される</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SliderValueChangeEventArgs">
            <summary>現在の位置が変化したときのイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SliderValueChangeEventArgs.#ctor(System.Single)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SliderValueChangeEventArgs.Value">
            <summary>現在の位置を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MoveTarget">
            <summary>動作対象のシーン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveTarget.NextScene">
            <summary>次のシーン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.MoveTarget.CurrentScene">
            <summary>現在のシーン</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator">
            <summary>補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator.Overshoot">
            <summary>オーバーシュート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator.Elastic">
            <summary>振動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SlideTransition">
            <summary>平行移動してシーンを切り替えるトランジション</summary>
            <remarks>MoveTargetプロパティにNextSceneを指定した場合、NextSceneが前面、CurrentSceneが背面になり、NextSceneがMoveDirectionプロパティで指定した方向にスライドインします。
            MoveTargetプロパティにCurrentSceneを指定した場合、CurrentSceneが前面、NextSceneが背面になり、CurrentSceneがMoveDirectionプロパティで指定した方向にスライドアウトします。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideTransition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideTransition.#ctor(System.Single,Sce.PlayStation.HighLevel.UI.FourWayDirection,Sce.PlayStation.HighLevel.UI.MoveTarget,Sce.PlayStation.HighLevel.UI.SlideTransitionInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="direction">トランジションの移動方向</param>
            <param name="moveTarget">重ね合わせの優先度</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.SlideTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideTransition.Time">
            <summary>持続時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideTransition.MoveDirection">
            <summary>トランジションの移動方向を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideTransition.MoveTarget">
            <summary>スライドするシーンがCurrentSceneかNextSceneかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideTransition.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.SlideTransition.CustomInterpolator">
            <summary>カスタムの補間関数を設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TapGestureDetector">
            <summary>タップ検出器</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TapGestureDetector.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TapGestureDetector.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントを配信する。</summary>
            <param name="touchEvents">タッチイベント</param>
            <returns>タッチイベント配信の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TapGestureDetector.OnResetState">
            <summary>ジェスチャ解析の状態をリセットする。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TapGestureDetector.MaxDistance">
            <summary>最初のdownの位置からの最大許容距離を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TapGestureDetector.MaxPressDuration">
            <summary>downからupまでの最大時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.TapGestureDetector.TapDetected">
            <summary>タップイベントハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TapEventArgs">
            <summary>タップイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TapEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.Core.Vector2,Sce.PlayStation.Core.Vector2)">
            <summary>コンストラクタ</summary>
            <param name="source">イベント発生元ウィジェット</param>
            <param name="worldPosition">ワールド（スクリーン）座標系での位置</param>
            <param name="localPosition">ローカル座標系での位置</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TapEventArgs.WorldPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TapEventArgs.LocalPosition">
            <summary>ローカル座標系での位置を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TextRenderHelper">
            @internal
            <summary>画像の中に文字列の描画を行う。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultFontAlias">
            <summary>デフォルトのフォント</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultFontSize">
            <summary>デフォルトのフォントサイズ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultFontStyle">
            <summary>デフォルトのフォントの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultHorizontalAlignment">
            <summary>デフォルトの水平方向のアラインメント</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultVerticalAlignment">
            <summary>デフォルトの垂直方向のアラインメント</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultTextColor">
            <summary>デフォルトの文字列の色</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DefaultBackgroundColor">
            <summary>デフォルトの文字列の背景色</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TextRenderHelper.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TextRenderHelper.GetImageSize(System.String)">
            <summary>文字列を描画するために必要な画像のサイズを取得する。</summary>
            <param name="text">文字列</param>
            <returns>文字列を描画するために必要な画像のサイズ</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TextRenderHelper.GetTotalHeight(System.String,System.Single)">
            <summary>文字列を指定した画像の幅で描画するときに必要な画像の高さを取得する。</summary>
            <param name="text">文字列</param>
            <param name="width">画像の幅</param>
            <returns>文字列を描画するために必要な画像の高さ</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TextRenderHelper.DrawText(System.String@,System.Int32,System.Int32)">
            <summary>画像の中に文字列を描画する。</summary>
            <param name="text">文字列</param>
            <param name="width">画像の幅</param>
            <param name="height">画像の高さ</param>
            <returns>文字列を描画した画像</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.Font">
            <summary>文字列のフォントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.HorizontalAlignment">
            <summary>水平方向のアラインメント取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.VerticalAlignment">
            <summary>垂直方向のアラインメントを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.HorizontalOffset">
            <summary>水平方向のオフセット位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.VerticalOffset">
            <summary>垂直方向のオフセット位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.LineBreak">
            <summary>文字列の改行方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.TextTrimming">
            <summary>文字列のトリミング方法を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TextRenderHelper.LineGap">
            <summary>行間を取得・設定する。</summary>
            <remarks>初期値は０</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TiltDropEffect">
            <summary>下方向へ落ちるエフェクト</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TiltDropEffect.DropDirection">
            <summary>落ちる方向（ラジアン）を取得・設定する。</summary>
            <remarks>下方向が0。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TiltDropEffect.Speed">
            <summary>エフェクトの速度を取得・設定する。1.0 が標準速度。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TiltDropTransition">
            <summary>下方向へ落ちるトランジション</summary>
            <remarks>新しいシーンが後ろから現れる</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropTransition.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TiltDropTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TiltDropTransition.DropDirection">
            <summary>落ちる方向（ラジアン）を取得・設定する。</summary>
            <remarks>下方向が0。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TiltDropTransition.Speed">
            <summary>落とす速度を取得・設定する。1.0 が標準速度。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TouchEventType">
            <summary>タッチイベントの種別</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TouchEventType.Up">
            <summary>離された</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TouchEventType.Down">
            <summary>押された</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TouchEventType.Move">
            <summary>移動した</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TouchEventType.Enter">
            <summary>領域の外側から内側に移動した</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TouchEventType.Leave">
            <summary>領域の内側から外側に移動した</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TouchEventType.None">
            <summary>無効</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TouchEvent">
            <summary>タッチイベントクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEvent.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEvent.Source">
            <summary>実際にタッチされたウィジェット。</summary>
            <remarks>子ウィジェットのタッチイベントをフックした場合に、どの子ウィジェットに対するタッチイベントだったのかを判定する場合などに用います。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEvent.WorldPosition">
            <summary>ワールド（スクリーン）座標系での位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEvent.LocalPosition">
            <summary>ローカル座標系での位置を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEvent.Time">
            <summary>イベントが発生した時刻を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEvent.Type">
            <summary>タッチイベントの種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEvent.FingerID">
            <summary>指のIDを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TouchEventArgs">
            <summary>タッチイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEventArgs.TouchEvents">
            <summary>ウィジェットに配信された全てのタッチイベントを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEventArgs.Forward">
            <summary>タッチイベント引数に含まれるタッチイベントをフォワードするかどうかを取得・設定する。初期値はFalse。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TransitionUpdateResponse">
            <summary>トランジションの更新の応答</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionUpdateResponse.Continue">
            <summary>トランジションの更新を継続する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionUpdateResponse.Finish">
            <summary>トランジションの更新を終了する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIColor">
            <summary>色を扱う構造体</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>コンストラクタ</summary>
            <param name="r">R値(0.0f-1.0f)</param>
            <param name="g">G値(0.0f-1.0f)</param>
            <param name="b">B値(0.0f-1.0f)</param>
            <param name="a">アルファ値(0.0f-1.0f)</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.op_Explicit(Sce.PlayStation.HighLevel.UI.UIColor)~Sce.PlayStation.Core.Vector4">
            <summary>UIColorからVector4への明示的型変換</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.op_Explicit(Sce.PlayStation.Core.Vector4)~Sce.PlayStation.HighLevel.UI.UIColor">
            <summary>Vector4からUIColorへの明示的型変換</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.op_Equality(Sce.PlayStation.HighLevel.UI.UIColor,Sce.PlayStation.HighLevel.UI.UIColor)">
            <summary>比較演算子==</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.op_Inequality(Sce.PlayStation.HighLevel.UI.UIColor,Sce.PlayStation.HighLevel.UI.UIColor)">
            <summary>比較演算子!=</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.Equals(System.Object)">
            <summary>対象と自分自身が等価かどうか</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.Equals(Sce.PlayStation.HighLevel.UI.UIColor)">
            <summary>対象と自分自身が等価かどうか</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.GetHashCode">
            <summary>ハッシュコードを返す</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIColor.R">
            <summary>R値</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIColor.G">
            <summary>G値</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIColor.B">
            <summary>B値</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIColor.A">
            <summary>アルファ値</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIColor.ToString">
            <summary>文字列を返す</summary>
            <returns>"R=0.0000 G=0.0000 B=0.0000 A=0.0000" 形式の文字列</returns>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.BlendMode">
            <summary>ブレンドモード</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.BlendMode.Half">
            <summary>ソースのアルファ成分の乗算によるブレンド</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.BlendMode.Add">
            <summary>加算によるブレンド</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.BlendMode.Premultiplied">
            <summary>プリマルチプライドアルファのブレンド</summary>
            <remarks>Widget.RenderToTextureにより作成されたテクスチャを描画するための特殊なブレンドモード。</remarks>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.BlendMode.Off">
            <summary>ブレンドを行わない（不透明）</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIPrimitive">
            <summary>プリミティブ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitive.#ctor(Sce.PlayStation.Core.Graphics.DrawMode,System.Int32)">
            <summary>コンストラクタ</summary>
            <param name="drawMode">描画モード</param>
            <param name="maxVertexCount">頂点の数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitive.#ctor(Sce.PlayStation.Core.Graphics.DrawMode,System.Int32,System.Int32)">
            <summary>コンストラクタ</summary>
            <param name="drawMode">描画モード</param>
            <param name="maxVertexCount">頂点の数</param>
            <param name="maxIndexCount">インデックスの数（０ならばインデクス配列を使用しない）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitive.DisposeSelf">
            <summary>このUIPrimitiveで使用されているアンマネージドリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitive.SetIndices(System.UInt16[])">
            <summary>インデックス配列を設定する。</summary>
            <param name="indices">インデックス配列</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitive.GetVertex(System.Int32)">
            <summary>頂点を取得する。</summary>
            <param name="index">インデックス</param>
            <returns>頂点</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitive.Render">
            <summary>プリミティブを描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitive.DrawMode">
            <summary>描画モードを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitive.VertexCount">
            <summary>頂点数を取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">負、もしくはMaxVertexCountより大きい値が設定されている。</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitive.MaxVertexCount">
            <summary>頂点数の最大値を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitive.MaxIndexCount">
            <summary>インデックス数の最大値を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitive.IndexCount">
            <summary>インデックス数を取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">負、もしくは MaxIndexCount より大きい値が設定されている。</exception>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIPrimitiveUtility">
            <summary>プリミティブのユーティリティ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveUtility.SetupNinePatch(Sce.PlayStation.HighLevel.UI.UIPrimitive,System.Single,System.Single,System.Single,System.Single,Sce.PlayStation.HighLevel.UI.NinePatchMargin)">
            <summary>画像の９パッチ情報をプリミティブに適用する。</summary>
            <param name="primitive">プリミティブ</param>
            <param name="width">描画先の幅</param>
            <param name="height">描画先の高さ</param>
            <param name="offsetX">描画先のX座標のオフセット位置</param>
            <param name="offsetY">描画先のY座標のオフセット位置</param>
            <param name="ninePatchMargin">９パッチ情報</param>
            <exception cref="T:System.ArgumentOutOfRangeException">プリミティブの最大頂点数、もしくは最大インデックス数が足りない。</exception>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveUtility.SetupNinePatch(Sce.PlayStation.HighLevel.UI.UIPrimitive,System.Single,System.Single,System.Single,System.Single,Sce.PlayStation.Core.Imaging.ImageRect,Sce.PlayStation.HighLevel.UI.NinePatchMargin)">
            <summary>画像の９パッチ情報をプリミティブに適用する。</summary>
            <param name="primitive">プリミティブ</param>
            <param name="width">描画先の幅</param>
            <param name="height">描画先の高さ</param>
            <param name="offsetX">描画先のX座標のオフセット位置</param>
            <param name="offsetY">描画先のY座標のオフセット位置</param>
            <param name="imageRect">画像の表示領域</param>
            <param name="ninePatchMargin">９パッチ情報</param>
            <exception cref="T:System.ArgumentOutOfRangeException">プリミティブの最大頂点数、もしくは最大インデックス数が足りない。</exception>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveUtility.SetupHorizontalThreePatch(Sce.PlayStation.HighLevel.UI.UIPrimitive,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>画像の水平方向の３パッチ情報をプリミティブに適用する。</summary>
            <param name="primitive">プリミティブ</param>
            <param name="width">描画先の幅</param>
            <param name="height">描画先の高さ</param>
            <param name="offsetX">描画先のX座標のオフセット位置</param>
            <param name="offsetY">描画先のY座標のオフセット位置</param>
            <param name="leftMargin">画像の左端のマージン</param>
            <param name="rightMargin">画像の右端のマージン</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveUtility.SetupVerticalThreePatch(Sce.PlayStation.HighLevel.UI.UIPrimitive,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>画像の垂直方向の３パッチ情報をプリミティブに適用する。</summary>
            <param name="primitive">プリミティブ</param>
            <param name="width">描画先の幅</param>
            <param name="height">描画先の高さ</param>
            <param name="offsetX">描画先のX座標のオフセット位置</param>
            <param name="offsetY">描画先のY座標のオフセット位置</param>
            <param name="topMargin">画像の上端のマージン</param>
            <param name="bottomMargin">画像の下端のマージン</param>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex">
            <summary>UIPrimitiveが管理する頂点データ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.SetPosition(System.Single,System.Single)">
            <summary>親の座標系での位置を設定する。</summary>
            <param name="x">親の座標系でのX座標</param>
            <param name="y">親の座標系でのY座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.SetPosition(System.Single,System.Single,System.Single)">
            <summary>親の座標系での位置を設定する。</summary>
            <param name="x">親の座標系でのX座標</param>
            <param name="y">親の座標系でのY座標</param>
            <param name="z">親の座標系でのZ座標</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.X">
            <summary>親の座標系でのX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.Y">
            <summary>親の座標系でのY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.Z">
            <summary>親の座標系でのZ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.U">
            <summary>横方向のテクスチャ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.V">
            <summary>縦方向のテクスチャ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.Color">
            <summary>頂点の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIPrimitiveVertex.Position3D">
            <summary>位置を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UISprite">
            <summary>複数の矩形をまとめて描画する</summary>
            <remarks>UI作成時に最も多用されるクラス</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISprite.#ctor(System.Int32)">
            <summary>コンストラクタ</summary>
            <param name="maxUnitCount">矩形の最大数（1～）</param>
            <remarks>maxUnitCountは1以上の値にクランプされる。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISprite.DisposeSelf">
            <summary>このUISpriteで使用されているアンマネージドリソースを解放する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISprite.GetUnit(System.Int32)">
            <summary>矩形を取得する。</summary>
            <param name="index">取得する矩形のインデックス</param>
            <returns>矩形</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISprite.Render">
            <summary>矩形を描画する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISprite.UnitCount">
            <summary>表示する矩形の数を取得・設定する。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">負、もしくは MaxUnitCount より大きい値が設定されている。</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISprite.MaxUnitCount">
            <summary>矩形の最大数を取得する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UISpriteUnit">
            <summary>UISpriteが管理する矩形データ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISpriteUnit.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISpriteUnit.SetPosition(System.Single,System.Single)">
            <summary>親の座標系での位置を設定する。</summary>
            <param name="x">親の座標系でのX座標</param>
            <param name="y">親の座標系でのY座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISpriteUnit.SetSize(System.Single,System.Single)">
            <summary>サイズを設定する。</summary>
            <param name="width">幅</param>
            <param name="height">高さ</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.X">
            <summary>親の座標系でのX座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.Y">
            <summary>親の座標系でのY座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.Z">
            <summary>親の座標系でのZ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.U1">
            <summary>左位置のテクスチャ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.V1">
            <summary>上位置のテクスチャ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.U2">
            <summary>右位置のテクスチャ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.V2">
            <summary>下位置テクスチャ座標を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.Color">
            <summary>頂点の色を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISpriteUnit.Position3D">
            <summary>位置を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UISpriteUtility">
            <summary>スプライトのユーティリティ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISpriteUtility.SetupNinePatch(Sce.PlayStation.HighLevel.UI.UISprite,System.Single,System.Single,System.Single,System.Single,Sce.PlayStation.HighLevel.UI.NinePatchMargin)">
            <summary>画像の９パッチ情報をスプライトに適用する。</summary>
            <param name="sprite">スプライト</param>
            <param name="width">描画先の幅</param>
            <param name="height">描画先の高さ</param>
            <param name="offsetX">描画先のX座標のオフセット位置</param>
            <param name="offsetY">描画先のY座標のオフセット位置</param>
            <param name="ninePatchMargin">９パッチ情報</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISpriteUtility.SetupHorizontalThreePatch(Sce.PlayStation.HighLevel.UI.UISprite,System.Single,System.Single,System.Single,System.Single)">
            <summary>画像の水平方向の３パッチ情報をスプライトに適用する。</summary>
            <param name="sprite">スプライト</param>
            <param name="width">描画先の幅</param>
            <param name="height">描画先の高さ</param>
            <param name="leftMargin">画像の左端のマージン</param>
            <param name="rightMargin">画像の右端のマージン</param>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder">
            <summary>トランジション中の描画順序</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.CurrentScene">
            <summary>CurrentSceneのみを描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.NextScene">
            <summary>NextSceneのみを描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.TransitionUIElement">
            <summary>TransitionUIElementのみを描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.CS_NS">
            <summary>CurrentScene、NextSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.CS_TE">
            <summary>CurrentScene、TransitionUIElementの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.NS_CS">
            <summary>NextScene、CurrentSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.NS_TE">
            <summary>NextScene、TransitionUIElementの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.TE_CS">
            <summary>TransitionUIElement、CurrentSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.TE_NS">
            <summary>TransitionUIElement、NextSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.CS_NS_TE">
            <summary>CurrentScene、NextScene、TransitionUIElementの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.CS_TE_NS">
            <summary>CurrentScene、TransitionUIElement、NextSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.NS_CS_TE">
            <summary>NextScene、CurrentScene、TransitionUIElementの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.NS_TE_CS">
            <summary>NextScene、TransitionUIElement、CurrentSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.TE_CS_NS">
            <summary>TransitionUIElement、CurrentScene、NextSceneの順に描画する。</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.TransitionDrawOrder.TE_NS_CS">
            <summary>TransitionUIElement、NextScene、CurrentSceneの順に描画する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LayoutOrientation">
            <summary>レイアウトの方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.LayoutOrientation.Horizontal">
            <summary>水平方向</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.LayoutOrientation.Vertical">
            <summary>垂直方向</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ScreenOrientation">
            <summary>画面の回転方法</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UISystem">
            <summary>UI Toolkitのシステム全体の管理を行うクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Initialize(Sce.PlayStation.Core.Graphics.GraphicsContext)">
            <summary>初期化する。</summary>
            <param name="graphics">グラフィックスコンテキスト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Initialize(Sce.PlayStation.Core.Graphics.GraphicsContext,System.Single)">
            <summary>初期化する。</summary>
            <param name="graphics">グラフィックスコンテキスト</param>
            <param name="pixelDensity">ピクセル密度</param>
            <exception cref="T:System.ArgumentOutOfRangeException">pixelDensity が 0.5～4 の範囲外です。</exception>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Terminate">
            <summary>終了する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Update(System.Collections.Generic.List{Sce.PlayStation.Core.Input.TouchData})">
            <summary>UIシステム全体を更新する。</summary>
            <param name="touchDataList">タッチ情報のリスト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Update(System.Collections.Generic.List{Sce.PlayStation.Core.Input.TouchData},Sce.PlayStation.Core.Input.GamePadData@)">
            <summary>UIシステム全体を更新する。</summary>
            <param name="touchDataList">タッチ情報のリスト</param>
            <param name="gamePadData">ゲームパッド情報</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Update(System.Collections.Generic.List{Sce.PlayStation.Core.Input.TouchData},Sce.PlayStation.Core.Input.MotionData@)">
            <summary>UIシステム全体を更新する。</summary>
            <param name="touchDataList">タッチ情報のリスト</param>
            <param name="motionData">モーションセンサー情報</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Update(System.Collections.Generic.List{Sce.PlayStation.Core.Input.TouchData},Sce.PlayStation.Core.Input.GamePadData@,Sce.PlayStation.Core.Input.MotionData@)">
            <summary>UIシステム全体を更新する。</summary>
            <param name="touchDataList">タッチ情報のリスト</param>
            <param name="gamePadData">ゲームパッド情報</param>
            <param name="motionData">モーションセンサー情報</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.FindHitWidget(Sce.PlayStation.Core.Vector2)">
            <summary>指定した座標に存在するウィジェットを探す。</summary>
            <returns>見つかったウィジェット。見つからなかった場合はnull。</returns>
            <param name='screenPoint'>スクリーン座標系での座標</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.CancelKeyEvents">
            <summary>現在のキーイベントをすべてキャンセルする</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.UpdateFrame">
            <summary>UIシステム全体を１フレーム分進める。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.Render">
            <summary>UIを描画する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.SetScene(Sce.PlayStation.HighLevel.UI.Scene)">
            <summary>シーンを切り替える。</summary>
            <param name="newScene">新しいシーン</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.SetScene(Sce.PlayStation.HighLevel.UI.Scene,Sce.PlayStation.HighLevel.UI.Transition)">
            <summary>シーンを切り替える。</summary>
            <param name="newScene">新しいシーン</param>
            <param name="transition">トランジション</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.PushScene(Sce.PlayStation.HighLevel.UI.Scene)">
            <summary>現在のシーンをシーンスタックにプッシュし、シーンを切り替える。</summary>
            <param name="newScene">新しいシーン</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.PopScene">
            <summary>シーンスタックに最後にプッシュしたシーンに切り替える。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.GetShaderProgram(Sce.PlayStation.HighLevel.UI.ShaderType)">
            <summary>シェーダープログラムを取得する。</summary>
            <param name="type">シェーダープログラムの種類</param>
            <returns>シェーダープログラム</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.RegisterEffect(Sce.PlayStation.HighLevel.UI.Effect)">
            <summary>エフェクトを登録する。</summary>
            <param name="effect">登録するエフェクト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.UnregisterEffect(Sce.PlayStation.HighLevel.UI.Effect)">
            <summary>エフェクトの登録を解除する。</summary>
            <param name="effect">解除するエフェクト</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.UpdateEffect">
            <summary>エフェクトを更新する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.UpdateTransition">
            <summary>トランジションを更新する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.ResetStateAll">
            <summary>全てのウィジェットの状態をリセットする。</summary>
            <remarks>ウィジェットに登録しているGestureDetectorの状態もリセットされる。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.ClearBuffer">
            <summary>PixelBufferのキャッシュをクリアする。対象はTransition用のテクスチャ。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.SetClipRegion(System.Single,System.Single,System.Single,System.Single)">
            <summary>クリップ（シザー）の領域を全画面（FrameBufferのサイズ）に設定する</summary>
            <remarks>クリップ領域のサイズが0以下の場合はクリップ領域は変更されない。x,yは左上原点。</remarks>
            <param name="x">x</param>
            <param name="y">y(左上原点)</param>
            <param name="w">width</param>
            <param name="h">height</param>
            <returns>false: クリップ領域のサイズが0</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UISystem.SetClipRegionFull">
            <summary>クリップ（シザー）の領域を全画面（FrameBufferのサイズ）に設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.KeyReceiverWidget">
            <summary>キー入力イベントを受けるウィジェットを取得・設定する。</summary>
            <remarks>nullを指定した場合、キーイベントは無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.GamePadData">
            <summary>ゲームパッド情報を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.MotionData">
            <summary>モーションセンサーの情報を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.FramebufferWidth">
            <summary>フレームバッファの幅を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.FramebufferHeight">
            <summary>フレームバッファの高さを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.PixelDensity">
            <summary>ピクセル密度を取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.Dpi">
            @internal
            <summary>DPI (SystemParameters.DisplayDpiX + SystemParameters.DisplayDpiY) / 2f</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.CurrentScene">
            <summary>現在表示中のシーンを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.NextScene">
            <summary>次に表示するシーンを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.ScenePushTransition">
            <summary>シーンがプッシュされる時のトランジションを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.ScenePopTransition">
            <summary>シーンがポップされる時のトランジションを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.TransitionUIElement">
            <summary>トランジション中のみ使用可能なエレメントツリーのルートを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.TransitionDrawOrder">
            <summary>トランジション中の描画順序を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.GraphicsContext">
            <summary>グラフィックスコンテキストを取得する。</summary>
            <returns>グラフィックスコンテキスト</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.ViewProjectionMatrix">
            <summary>プロジェクション行列を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.CurrentTime">
            <summary>システムの経過時間を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.KeyLongPressTime">
            <summary>キーが押されてからLongPressキーイベントが発行されるまでの時間（ミリ秒）を取得、設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.KeyRepeatStartTime">
            <summary>キーが押されてからRepeatキーイベントが初めて発行されるまでの時間（ミリ秒）を取得、設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.KeyRepeatIntervalTime">
            <summary>Repeatキーイベントが発行される間隔（ミリ秒）を取得、設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.FocusTimeout">
            <summary>無操作時にフォーカスを非アクティブにするまでの時間（ミリ秒）を取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.FocusActive">
            <summary>フォーカスが現在アクティブかどうかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.EnabledFocus">
            <summary>フォーカス機能を有効にするかどうかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.SuppressFocusKeyEvent">
            <summary>フォーカスのキーイベント配信を一時停止させるかどうかを取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.FocusFilterColor">
            <summary>フォーカスイメージに乗算する色を取得・設定する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UISystem.FocusBlendMode">
            <summary>フォーカスイメージのブレンドモードを取得・設定する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UISystem.GraphicsState">
            <summary>RenderのときのGraphicsContextのStateを覚えておくためのクラス</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PivotType">
            <summary>ピボットの種別</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.TopLeft">
            <summary>左上</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.TopCenter">
            <summary>上</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.TopRight">
            <summary>右上</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.MiddleLeft">
            <summary>左</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.MiddleCenter">
            <summary>中央</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.MiddleRight">
            <summary>右</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.BottomLeft">
            <summary>左下</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.BottomCenter">
            <summary>下</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PivotType.BottomRight">
            <summary>右下</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.Anchors">
            <summary>アンカーの種別</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.None">
            <summary>なし</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.Top">
            <summary>上固定</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.Bottom">
            <summary>下固定</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.Height">
            <summary>高さ固定</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.Left">
            <summary>左固定</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.Right">
            <summary>右固定</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.Anchors.Width">
            <summary>幅固定</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator">
            <summary>ZoomEffect用の補間関数</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator.Linear">
            <summary>線形補間</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator.EaseOutQuad">
            <summary>イージング（二次）</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator.Overshoot">
            <summary>オーバーシュート</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator.Elastic">
            <summary>振動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator.Custom">
            <summary>カスタム</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ZoomEffect">
            <summary>現在のスケールから指定したスケールに拡大または縮小するエフェクト</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ZoomEffect.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ZoomEffect.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.Single,System.Single,Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクトの対象となるウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="scale">目標のスケール</param>
            <param name="interpolator">補間関数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ZoomEffect.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.Single,System.Single,Sce.PlayStation.HighLevel.UI.ZoomEffectInterpolator)">
            <summary>インスタンスを作成しエフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="time">持続時間（ミリ秒）</param>
            <param name="scale">目標のスケール</param>
            <param name="interpolator">補間関数</param>
            <returns>エフェクトのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ZoomEffect.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ZoomEffect.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ZoomEffect.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ZoomEffect.TargetScaleX">
            <summary>目標のX方向のスケールを取得・設定する。（等倍＝１）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ZoomEffect.TargetScaleY">
            <summary>目標のY方向のスケールを取得・設定する。（等倍＝１）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ZoomEffect.TargetScaleZ">
            <summary>目標のZ方向のスケールを取得・設定する。（等倍＝１）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ZoomEffect.Time">
            <summary>アニメーションの時間を取得・設定する。（ミリ秒）</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ZoomEffect.Interpolator">
            <summary>補間関数の種類を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ZoomEffect.CustomInterpolator">
            <summary>カスタムの補間関数を取得・設定する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DefaultNavigationTransition.#ctor(Sce.PlayStation.HighLevel.UI.DefaultNavigationTransition.TransitionType)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DefaultNavigationTransition.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DefaultNavigationTransition.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>トランジションの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DefaultNavigationTransition.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.SpringType">
            <summary>LiveSpringPanelのバネの種類</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.AngleAxisX">
            <summary>X軸回転に作用するバネ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.AngleAxisY">
            <summary>Y軸回転に作用するバネ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.AngleAxisZ">
            <summary>Z軸回転に作用するバネ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.PositionX">
            <summary>X軸方向の移動に作用するバネ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.PositionY">
            <summary>Y軸方向の移動に作用するバネ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.PositionZ">
            <summary>Z軸方向の移動に作用するバネ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.SpringType.All">
            <summary>すべてのバネ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.LiveSpringPanel">
            <summary>加速度センサーやパネルの動きに応じて子ウィジェットが揺れるパネル</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.OnMotionEvent(Sce.PlayStation.HighLevel.UI.MotionEvent)">
            <summary>モーションイベントハンドラ</summary>
            <param name="motionEvent">モーションイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.AddChildFirst(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを先頭に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は先頭に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.AddChildLast(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>子ウィジェットを末尾に追加する。</summary>
            <param name="child">追加する子ウィジェット</param>
            <remarks>既に追加されている場合は末尾に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.InsertChildBefore(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直前に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="nextChild">挿入する子ウィジェットの直後となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直前に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.InsertChildAfter(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定した子ウィジェットの直後に挿入する。</summary>
            <param name="child">挿入する子ウィジェット</param>
            <param name="prevChild">挿入する子ウィジェットの直前となる子ウィジェット</param>
            <remarks>既に追加されている場合は指定した子ウィジェットの直後に移動する。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.RemoveChild(Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>指定された子ウィジェットを削除する。</summary>
            <param name="child">削除するウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.SetDampingConstant(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.SpringType,System.Single)">
            <summary>バネの減衰定数（揺れが収束までの早さ）を設定する。</summary>
            <remarks>0以上、1以下の値で、大きくなればゆれが収束するまでの時間が短くなる。デフォルトは0.2。</remarks>
            <param name="widget">減衰定数を設定するウィジェット。nullを指定するとすべてのウィジェットの減衰定数を変更する。</param>
            <param name="type">減衰定数を設定するバネの種類。SpringType.Allを指定するとすべてのバネの減衰定数を変更する。</param>
            <param name="dampingConstant">減衰定数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.GetDampingConstant(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.SpringType)">
            <summary>バネの減衰定数（揺れが収束までの早さ）を取得する。</summary>
            <remarks>0以上、1以下の値で、大きくなればゆれが収束するまでの時間が短くなる。デフォルトは0.2。</remarks>
            <param name="widget">減衰定数を取得するウィジェット</param>
            <param name="type">減衰定数を取得するバネの種類</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.SetSpringConstant(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.SpringType,System.Single)">
            <summary>バネ定数（バネが元の位置に戻ろうとする強さ）を設定する。</summary>
            <remarks>0以上、1以下の値で、大きくなればゆれが小さくなる。デフォルトは0.3。</remarks>
            <param name="widget">バネ定数を設定するウィジェット。nullを指定するとすべてのWidgetのバネ定数を変更する。</param>
            <param name="type">バネ定数を設定するバネの種類。SpringType.Allを指定するとすべてのバネの減衰定数を変更する。</param>
            <param name="springConstant">バネ定数</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.GetSpringConstant(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.SpringType)">
            <summary>バネ定数（バネが元の位置に戻ろうとする強さ）を取得する。</summary>
            <remarks>0以上、1以下の値で、大きくなればゆれが小さくなる。デフォルトは0.3。</remarks>
            <param name="widget">バネ定数を取得するウィジェット</param>
            <param name="type">バネ定数を取得するバネの種類</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.SetDisplacement(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.SpringType,System.Single)">
            <summary>バネの変化量（初期位置からのずれ）を設定する。</summary>
            <param name="widget">変化量を設定するウィジェット</param>
            <param name="type">変化量を設定するバネの種類</param>
            <param name="displacement">変化量</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.GetDisplacement(Sce.PlayStation.HighLevel.UI.Widget,Sce.PlayStation.HighLevel.UI.SpringType)">
            <summary>バネの変化量（初期位置からのずれ）を取得する。</summary>
            <param name="widget">変化量を取得するウィジェット</param>
            <param name="type">変化量を取得するバネの種類</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.AddAcceleraton(System.Single,System.Single,System.Single)">
            <summary>子ウィジェットに加速度を加える</summary>
            <param name="x">X方向の加速度</param>
            <param name="y">Y方向の加速度</param>
            <param name="z">Z方向の加速度</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.ReflectSensorAcceleration">
            <summary>加速度センサーの値を子ウィジェットの動きに反映させるかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.LiveSpringPanel.ReflectMotionAcceleration">
            <summary>パネルの動きを子ウィジェットの動きに反映させるかどうかを取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TouchEventCollection">
            <summary>複数のタッチイベントをまとめて保持するクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.GetTouchEventByID(System.Int32)">
            <summary>指定した指のIDのタッチイベントを取得する。</summary>
            <param name="id">指のID</param>
            <returns>タッチイベント</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.Add(Sce.PlayStation.HighLevel.UI.TouchEvent)">
            <summary>タッチイベントを追加する。</summary>
            <param name="touchEvent">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.Insert(System.Int32,Sce.PlayStation.HighLevel.UI.TouchEvent)">
            <summary>指定したインデックス位置にタッチイベントを追加する。</summary>
            <param name="index">インデックス</param>
            <param name="touchEvent">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.IndexOf(Sce.PlayStation.HighLevel.UI.TouchEvent)">
            <summary>指定したタッチイベントのインデックスを取得する。</summary>
            <param name="touchEvent">タッチイベント</param>
            <returns>インデックス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.Remove(Sce.PlayStation.HighLevel.UI.TouchEvent)">
            <summary>指定したタッチイベントを削除する。</summary>
            <param name="touchEvent">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TouchEventCollection.Contains(Sce.PlayStation.HighLevel.UI.TouchEvent)">
            <summary>指定したタッチイベントが含まれているかどうかを取得する。</summary>
            <param name="touchEvent">タッチイベント</param>
            <returns>含まれているかどうか</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEventCollection.Item(System.Int32)">
            <summary>インデクサー</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEventCollection.PrimaryTouchEvent">
            <summary>ウィジェットに最初に触れた指のタッチイベントを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TouchEventCollection.Forward">
            <summary>コレクションに含まれるタッチイベントをフォワードするかどうかを取得・設定する。初期値はFalse。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MotionEvent">
            <summary>モーションイベントクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MotionEvent.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MotionEvent.Acceleration">
            <summary>加速度を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MotionEvent.AngularVelocity">
            <summary>角速度を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MotionEvent.Time">
            <summary>イベントが発生した時刻を取得・設定する。</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.MotionEventArgs">
            <summary>モーションイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MotionEventArgs.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.MotionEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.MotionEvent)">
            <summary>コンストラクタ</summary>
            <param name="motionEvent">モーションセンサー情報</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MotionEventArgs.Time">
            <summary>イベントが発生した時刻を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MotionEventArgs.Acceleration">
            <summary>加速度を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.MotionEventArgs.AngularVelocity">
            <summary>角速度を取得・設定する。</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Sce.PlayStation.HighLevel.UI.AnimationInterpolator" -->
        <member name="T:Sce.PlayStation.HighLevel.UI.AnimationUtility">
            <summary>アニメーション用のユーティリティ</summary>
            <remarks>EffectおよびTransitionに使用できるアニメーション補間関数</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.LinearInterpolator(System.Single,System.Single,System.Single)">
            <summary>線形補間関数</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInQuadInterpolator(System.Single,System.Single,System.Single)">
            <summary>二次関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutQuadInterpolator(System.Single,System.Single,System.Single)">
            <summary>二次関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutQuadInterpolator(System.Single,System.Single,System.Single)">
            <summary>二次関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInQuadInterpolator(System.Single,System.Single,System.Single)">
            <summary>二次関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInCubicInterpolator(System.Single,System.Single,System.Single)">
            <summary>三次関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutCubicInterpolator(System.Single,System.Single,System.Single)">
            <summary>三次関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutCubicInterpolator(System.Single,System.Single,System.Single)">
            <summary>三次関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInCubicInterpolator(System.Single,System.Single,System.Single)">
            <summary>三次関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInQuartInterpolator(System.Single,System.Single,System.Single)">
            <summary>四次関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutQuartInterpolator(System.Single,System.Single,System.Single)">
            <summary>四次関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutQuartInterpolator(System.Single,System.Single,System.Single)">
            <summary>四次関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInQuartInterpolator(System.Single,System.Single,System.Single)">
            <summary>四次関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInQuintInterpolator(System.Single,System.Single,System.Single)">
            <summary>五次関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutQuintInterpolator(System.Single,System.Single,System.Single)">
            <summary>五次関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合(0.0f～1.0f)</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutQuintInterpolator(System.Single,System.Single,System.Single)">
            <summary>五次関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInQuintInterpolator(System.Single,System.Single,System.Single)">
            <summary>五次関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInSineInterpolator(System.Single,System.Single,System.Single)">
            <summary>サイン関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutSineInterpolator(System.Single,System.Single,System.Single)">
            <summary>サイン関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutSineInterpolator(System.Single,System.Single,System.Single)">
            <summary>サイン関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInSineInterpolator(System.Single,System.Single,System.Single)">
            <summary>サイン関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInExpoInterpolator(System.Single,System.Single,System.Single)">
            <summary>累乗関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutExpoInterpolator(System.Single,System.Single,System.Single)">
            <summary>累乗関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutExpoInterpolator(System.Single,System.Single,System.Single)">
            <summary>累乗関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInExpoInterpolator(System.Single,System.Single,System.Single)">
            <summary>累乗関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInCircInterpolator(System.Single,System.Single,System.Single)">
            <summary>円関数によるイーズイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutCircInterpolator(System.Single,System.Single,System.Single)">
            <summary>円関数によるイーズアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseInOutCircInterpolator(System.Single,System.Single,System.Single)">
            <summary>円関数によるイーズインアウト補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.EaseOutInCircInterpolator(System.Single,System.Single,System.Single)">
            <summary>円関数によるイーズアウトイン補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.ElasticInterpolator(System.Single,System.Single,System.Single)">
            <summary>弾性(Elastic)関数による補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.UndershootInterpolator(System.Single,System.Single,System.Single)">
            <summary>アンダーシュート関数による補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.OvershootInterpolator(System.Single,System.Single,System.Single)">
            <summary>オーバーシュート関数による補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.BounceInterpolator(System.Single,System.Single,System.Single)">
            <summary>跳ね返り(Bounce)関数による補間</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.AnimationUtility.FlipBounceInterpolator(System.Single,System.Single,System.Single)">
            <summary>FlipBoardの標準的な補間関数</summary>
            <param name="from">開始値</param>
            <param name="to">終了値</param>
            <param name="ratio">割合（０～１）</param>
            <returns>補間結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.DisposeSelf">
            <summary>Disposes the self.</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.FactoryMethod">
            <summary>アイテムを生成する。</summary>
            <returns>SpinBoxItemPanelクラスのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベントのハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.OnResetState">
            <summary>リセットステートハンドラ</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.Width">
            <summary>幅を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.Height">
            <summary>高さを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.IsFocused">
            <summary>ターゲット状態を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.IsSelected">
            <summary>選択状態を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.ImageAsset">
            <summary>表示する画像を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.ItemId">
            <summary>リストアイテムのIDを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.ShaderType">
            <summary>使用するShaderProgramの種類</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.ProtectedSelectAction">
            <summary>リストアイテム選択時に呼ばれるハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinItem.ProtectedSelectActionHandler">
            <summary>リストアイテム選択時に呼ばれるハンドラのデリゲート</summary>
            <param name="sender">リストアイテム</param>
            <param name="itemId">リストアイテムのID</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.IsSelect(System.Int32)">
            <summary>選択状態を取得する。</summary>
            <param name="itemId">アイテムのインデックス値</param>
            <returns>選択状態</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.SetSelect(System.Int32,System.Boolean)">
            <summary>指定したアイテムを選択する。</summary>
            <param name="itemId">選択したいアイテムのインデックス値</param>
            <param name="isSelect">選択状態</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.StartItemRequest">
            <summary>List操作を開始する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.GetListItem(System.Int32)">
            <summary>ListItemを取得する。</summary>
            <param name="index">アイテム番号</param>
            <returns>ListItemの取得（nullが返ることがある）</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.SetScrollAreaPos(System.Int32,System.Single,System.Boolean)">
            <summary>表示領域トップの行番号とのずれをピクセル数で設定する。</summary>
            <param name="firstLine">トップの行番号</param>
            <param name="pixelOffset">行番号からのピクセル数</param>
            <param name="withAnimate">true:アニメーション付き  false:即時</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.SetScrollAreaPos(System.Single,System.Boolean)">
            <summary>表示位置を全体の割合（０～１）で設定する。</summary>
            <param name="ratio">全体に対する表示位置の割合</param>
            <param name="withAnimate">true:アニメーション付き  false:即時</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.OnTouchEvent(Sce.PlayStation.HighLevel.UI.TouchEventCollection)">
            <summary>タッチイベント時に呼び出されるハンドラ</summary>
            <param name="touchEvents">タッチイベント</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.OnResetState">
            <summary>自分自身と、自分以下の全ウィジェットの状態をリセットする。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ItemGapLine">
            <summary>アイテムの行間の距離を取得・取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ItemGapStep">
            <summary>アイテムの列間の距離を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.FocusIndex">
            <summary>フォーカス中アイテムのインデックス値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.IsLoop">
            <summary>リストのループを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.IsItemFit">
            <summary>アイテムごとに停止するかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ScrollAreaFirstLine">
            <summary>表示領域トップの行番号を取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ScrollAreaPixelOffset">
            <summary>表示領域トップの行番号から何ピクセルずれているかを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ScrollAreaRatio">
            <summary>表示位置を全体の割合（０～１）で取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ScrollAreaLineNum">
            <summary>表示領域の行数を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ListItemNum">
            <summary>リストの総項目数を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.TotalLineNum">
            <summary>リストの総行数を取得する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.ItemRequestAction">
            <summary>リストアイテムリクエストハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.InternalSpinBox.SpinList.AnimationState">
            <summary>アニメーションの状態</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TimePicker">
            <summary>時刻を選択するためのウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TimePicker.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TimePicker.HitTest(Sce.PlayStation.Core.Vector2)">
            <summary>ヒットテストハンドラ</summary>
            <param name="screenPoint">スクリーン座標系での位置</param>
            <returns>ヒットしている場合はtrue。ヒットしていない場合はfalse。</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePicker.Width">
            <summary>幅を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePicker.Height">
            <summary>高さを取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePicker.PriorityHit">
            <summary>優先してタッチに反応するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePicker.Hour">
            <summary>時間（24時間表記）を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePicker.Minute">
            <summary>分を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePicker.Time">
            <summary>時間をDateTime構造体で取得・設定する。</summary>
            <remarks>設定時に時間と分以外は無視され、取得時の日付は1年1月1日になります。</remarks>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.TimePicker.ValueChanged">
            <summary>値が変更されたときに発行されるイベント</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs">
            <summary>TimePicker の値が変更されたときのイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs.ToString">
            <summary>文字列を取得する。</summary>
            <returns>変換された文字列</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs.NewHour">
            <summary>今回選択された時間</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs.NewMinute">
            <summary>今回選択された分</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs.OldHour">
            <summary>前回選択されていた時間</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.TimePickerValueChangedEventArgs.OldMinute">
            <summary>前回選択されていた分</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DatePicker">
            <summary>日付を選択するためのウィジェット</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DatePicker.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DatePicker.HitTest(Sce.PlayStation.Core.Vector2)">
            <summary>ヒットテストハンドラ</summary>
            <param name="screenPoint">スクリーン座標系での位置</param>
            <returns>ヒットしている場合はtrue。ヒットしていない場合はfalse。</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.Width">
            <summary>幅を取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.Height">
            <summary>高さを取得する。</summary>
            <remarks>設定された値は無視される。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.PriorityHit">
            <summary>優先してタッチに反応するかどうかを取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.MinYear">
            <summary>年の最小値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.MaxYear">
            <summary>年の最大値を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.Year">
            <summary>年を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.Month">
            <summary>月を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.Day">
            <summary>日を取得・設定する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePicker.Date">
            <summary>日付をDateTime構造体で取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.DatePicker.ValueChanged">
            <summary>値が変更されたときに発行されるイベント</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs">
            <summary>DatePicker の値が変更されたときのイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.ToString">
            <summary>文字列を取得する。</summary>
            <returns>変換された文字列</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.NewYear">
            <summary>今回選択された年</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.NewMonth">
            <summary>今回選択された月</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.NewDay">
            <summary>今回選択された日</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.OldYear">
            <summary>前回選択されていた年</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.OldMonth">
            <summary>前回選択されていた月</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.DatePickerValueChangedEventArgs.OldDay">
            <summary>前回選択されていた日</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer">
            <summary>uia 形式のアニメーションを再生するクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="filePath">uia ファイルのパス</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.CreateAndPlay(System.String)">
            <summary>uia ファイルからUIAnimationPlayerを生成し、アニメーションを再生する。</summary>
            <param name="filePath">uia ファイルのパス</param>
            <returns>UIAnimationPlayerのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Play">
            <summary>アニメーションを再生する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Stop">
            <summary>アニメーションを停止する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Pause">
            <summary>アニメーションを中断する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Resume">
            <summary>アニメーションを再開する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.GotoAndPlay(System.String)">
            <summary>指定したフレームに移動し、アニメーションを再生する。</summary>
            <param name="label">移動先のフレーム名</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.ReplaceWidget(System.String,Sce.PlayStation.HighLevel.UI.Widget)">
            <summary>ウィジェットを置き換える。</summary>
            <param name="name">削除するウィジェット名</param>
            <param name="widget">追加するウィジェット</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.DisposeSelf">
            <summary>このウィジェットの所有するアンマネージドリソースを解放する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Playing">
            <summary>アニメーション中かどうかを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Paused">
            <summary>アニメーションが中断されているかどうかを取得する。</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.Repeating">
            <summary>アニメーションをリピート再生するかどうかを取得・設定する。</summary>
        </member>
        <member name="E:Sce.PlayStation.HighLevel.UI.UIAnimationPlayer.AnimationStopped">
            <summary>アニメーションを停止したときに呼び出されるハンドラ</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIMotion">
            <summary>uim 形式のモーションを再生するクラス</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.#ctor(Sce.PlayStation.HighLevel.UI.Widget,System.String)">
            <summary>コンストラクタ</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="filePath">uim ファイルのパス</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.CreateAndStart(Sce.PlayStation.HighLevel.UI.Widget,System.String)">
            <summary>uim ファイルからUIMotionを生成し、エフェクトを開始する。</summary>
            <param name="widget">エフェクト対象のウィジェット</param>
            <param name="filePath">uim ファイルのパス</param>
            <returns>UIMotionのインスタンス</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.OnStart">
            <summary>開始処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.OnUpdate(System.Single)">
            <summary>更新処理</summary>
            <param name="elapsedTime">前回のUpdateからの経過時間（ミリ秒）</param>
            <returns>エフェクトの更新の応答</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.Stop">
            <summary>エフェクトを停止する。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.OnStop">
            <summary>停止処理</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIMotion.OnRepeat">
            <summary>リピート処理</summary>
            <remarks>派生クラスでリピート処理を実装する。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FocusStyle">
            <summary>フォーカスの表示スタイル</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FocusStyle.RoundedCorner">
            <summary>角が丸い四角形</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FocusStyle.Rectangle">
            <summary>四角形</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FocusStyle.Circle">
            <summary>円形</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FocusStyle.ListItem">
            <summary>リストアイテム</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.FocusStyle.None">
            <summary>表示しない</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FocusCustomSettings">
            <summary>フォーカスのカスタム設定</summary>
            <remarks>各メンバは、デフォルト値(nullまたはゼロ)であれば標準の設定に沿って処理を行います。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.LeftCandidate">
            <summary>対象ウィジェットで左キーを押した場合のフォーカスの移動先ウィジェットを取得・設定する</summary>
            <remarks>値が null もしくは 同一のシーン上に存在しないウィジェットの場合は標準のフォーカス検索が行われます。
            指定したウィジェットはFocusable、Visible、Enabledプロパティおよび表示範囲内にあるかにかかわらずフォーカスが設定されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.RightCandidate">
            <summary>対象ウィジェットで右キーを押した場合のフォーカスの移動先ウィジェットを取得・設定する</summary>
            <remarks>値が null もしくは 同一のシーン上に存在しないウィジェットの場合は標準のフォーカス検索が行われます。
            指定したウィジェットはFocusable、Visible、Enabledプロパティおよび表示範囲内にあるかにかかわらずフォーカスが設定されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.UpCandidate">
            <summary>対象ウィジェットで上キーを押した場合のフォーカスの移動先ウィジェットを取得・設定する</summary>
            <remarks>値が null もしくは 同一のシーン上に存在しないウィジェットの場合は標準のフォーカス検索が行われます。
            指定したウィジェットはFocusable、Visible、Enabledプロパティおよび表示範囲内にあるかにかかわらずフォーカスが設定されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.DownCandidate">
            <summary>対象ウィジェットで下キーを押した場合のフォーカスの移動先ウィジェットを取得・設定する</summary>
            <remarks>値が null もしくは 同一のシーン上に存在しないウィジェットの場合は標準のフォーカス検索が行われます。
            指定したウィジェットはFocusable、Visible、Enabledプロパティおよび表示範囲内にあるかにかかわらずフォーカスが設定されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.SearchHintRectangle">
            <summary>フォーカスを検索する場合の矩形を取得・設定する</summary>
            <remarks>サイズが0以下の場合は対象ウィジェット自身のサイズを使用します。
            位置とサイズは対象ウィジェット自身のローカル座標で指定します。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.HideFocusImage">
            <summary>フォーカスイメージを非表示にするかどうか取得・設定する</summary>
            <remarks>true の場合は標準またはカスタムのフォーカスイメージを表示しないようにします。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.FocusImageRectangle">
            <summary>フォーカスを表示する際の矩形(位置とサイズ)を取得・設定する</summary>
            <remarks>サイズが0以下の場合は対象ウィジェット自身のサイズを使用します。
            位置とサイズは対象ウィジェット自身のローカル座標で指定します。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.FocusImage">
            <summary>フォーカスのカスタムイメージを取得・設定する</summary>
            <remarks>nullの場合はデフォルトのフォーカスイメージを使用します。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.FocusImageNinePatchMargin">
            <summary>フォーカスのカスタムイメージの9パッチマージンを取得・設定する</summary>
            <remarks>FocusImage が null の場合はこの値は無視されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusCustomSettings.FocusImagePadding">
            <summary>フォーカスのカスタムイメージを外側に広げる大きさを取得・設定する</summary>
            <remarks>FocusImage が null の場合はこの値は無視されます。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.FocusChangedEventArgs">
            <summary>FocusChangedイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.FocusChangedEventArgs.#ctor(System.Boolean)">
            <summary>コンストラクタ</summary>
            <param name="focused">フォーカスが設定されたかどうか</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.FocusChangedEventArgs.Focused">
            <summary>フォーカスが設定されたかどうかを取得する</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PressState">
            <summary>プレス状態</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressState.Normal">
            <summary>通常</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressState.Pressed">
            <summary>プレス</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressState.Disabled">
            <summary>無効</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PressStateChangedReason">
            <summary>プレス状態の変更理由</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.TouchDown">
            <summary>タッチダウン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.TouchLeave">
            <summary>タッチが領域の内側から外側に移動した</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.TouchEnter">
            <summary>タッチが領域の外側から内側に移動した</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.TouchUp">
            <summary>タッチアップ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.KeyDown">
            <summary>キーダウン</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.KeyUp">
            <summary>キーアップ</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.Cancel">
            <summary>キャンセルされた、または ResetState が呼ばれた</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.ChangePressStateProperty">
            <summary>PressStateプロパティが変更された</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateChangedReason.ChangeEnabledProperty">
            <summary>Enabledプロパティが変更された</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PressStateTouchLeaveBehavior">
            <summary>タッチが領域の内側から外側に移動した場合のプレス状態の挙動</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateTouchLeaveBehavior.ResumeByTouchEnter">
            <summary>指が範囲外にでるとNormalになるが、指を離さずに範囲外に戻るとまたPress状態に戻る</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateTouchLeaveBehavior.KeepPressed">
            <summary>指が範囲外にドラッグされてもPress状態を維持する</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.PressStateTouchLeaveBehavior.End">
            <summary>指が一度範囲外にでるとNormalになり、再タッチするまでPress状態にはならない</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs">
            <summary>PressStateChangedイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.PressStateChangedReason,Sce.PlayStation.HighLevel.UI.PressState,Sce.PlayStation.HighLevel.UI.PressState)">
            <summary>コンストラクタ</summary>
            <param name="reason">変更理由</param>
            <param name="newState">変更後のプレス状態</param>
            <param name="oldState">変更前のプレス状態</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs.NewState">
            <summary>変更後のプレス状態</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs.OldState">
            <summary>変更前のプレス状態</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.PressStateChangedEventArgs.ChangedReason">
            <summary>変更理由</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.ListPanelItemSelectChangedEventArgs">
            <summary>リストアイテムが選択された場合に呼び出されるイベント引数</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanelItemSelectChangedEventArgs.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.ListPanelItemSelectChangedEventArgs.#ctor(Sce.PlayStation.HighLevel.UI.ListPanelItem)">
            <summary>コンストラクタ</summary>
            <param name="item">アイテム</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItemSelectChangedEventArgs.Index">
            <summary>選択されたアイテムのインデックス</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItemSelectChangedEventArgs.IndexInSection">
            <summary>セクションのインデックス</summary>
            <remarks>このプロパティはListPanelの時にのみ有効です。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.ListPanelItemSelectChangedEventArgs.SectionIndex">
            <summary>セクション内のインデックス</summary>
            <remarks>このプロパティはListPanelの時にのみ有効です。</remarks>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIDebug">
            <summary>UI Toolkit のデバッグに使用するユーティリティクラス</summary>
            <remarks>このクラスのほとんどのメソッドは、条件付きコンパイル シンボルに "DEBUG" が定義されている場合にのみ動作します。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.assertLog(System.String,System.String)">
            <summary>アサーション失敗のメッセージとコールスタックをコンソール画面に出力する</summary>
            <remarks>System.Diagnostics.Debug.Assert が動作しないため、その代替のメソッドです。
            UIライブラリのコンパイルシンボルに"BREAK_UIDEBUG_ASSERT"を定義すると、デバッグ時に中断しますが、デバッグなし実行した場合に実行を継続できなくなります。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.Assert(System.Boolean)">
            <summary>条件がfalseの場合、コンソール画面にアサーションの失敗のメッセージを出力する</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="condition">条件</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.Assert(System.Boolean,System.String)">
            <summary>条件がfalseの場合、コンソール画面にアサーションの失敗のメッセージを出力する</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="condition">条件</param>
            <param name="message">メッセージ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.Assert(System.Boolean,System.String,System.String)">
            <summary>条件がfalseの場合、コンソール画面にアサーションの失敗のメッセージを出力する</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="condition">条件</param>
            <param name="message">メッセージ</param>
            <param name="detailMessage">詳細なメッセージ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.Assert(System.Boolean,System.String,System.String,System.Object[])">
            <summary>条件がfalseの場合、コンソール画面にアサーションの失敗のメッセージを出力する</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="condition">条件</param>
            <param name="message">メッセージ</param>
            <param name="detailMessageFormat">詳細なメッセージの書式文字列</param>
            <param name="args">>詳細なメッセージの書式パラメータ</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.ExportAllImageAsset">
            <summary>キャッシュされているImageAssetをすべて画像ファイルに出力します。</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.EnableRecordUncachedTexture">
            <summary>キャッシュされないImageAssetもExportAllImageAssetで出力できるようにする</summary>
            <remarks>このメソッドはUISystem.Initializeを呼び出す前に呼び出すことができます。
            "DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.ExportImageAsset(Sce.PlayStation.HighLevel.UI.ImageAsset,System.String)">
            <summary>ImageAssetを画像ファイルに出力する</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="imageAsset">出力するImageAsset</param>
            <param name="filename">ファイル名</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.ExportFrameBuffer(System.String)">
            @internal
            <summary>現在のフレームバッファを画像ファイルに出力する</summary>
            <remarks>"DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="filename">ファイル名</param>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIDebug.DumpSceneGraph(System.String)">
            <summary>現在のシーンのウィジェットと描画要素のツリー、および各要素のプロパティをXMLとしてダンプする</summary>
            <remarks>filenameにnullを指定した場合はコンソール画面に出力します。
            出力されるXMLのフォーマットは暫定です。また、すべてのプロパティメンバが出力されるわけではありません。
            "DEBUG" コンパイルシンボルが定義されていない場合は、このメソッドの呼び出しは無視されます。</remarks>
            <param name="filename">出力するファイル名(nullの場合はコンソール画面に出力)</param>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIDebug.ImageExportAlbumName">
            <summary>ImageAssetをExportする際のアルバム名を設定、取得する</summary>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIDebug.ImageAssetAsyncLoad">
            @internal
            <summary>ImageAssetの非同期読み込みを制御する</summary>
            <value>ForceEnabled: すべて非同期で読み込む  ForceDisabled: すべて同期で読み込む</value>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIDebug.WidgetClipping">
            @internal
            <summary>WidgetのClipを制御する</summary>
            <value>ForceEnabled: すべてのウィジェットのClipを有効にする  ForceDisabled: すべてのウィジェットのClipを無効にする</value>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIDebug.ForceMode">
            @internal
            <summary>同期、非同期のモード</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIDebug.ForceMode.Normal">
            <summary>通常の設定に従う</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIDebug.ForceMode.ForceEnabled">
            <summary>強制的にすべて有効にする</summary>
        </member>
        <member name="F:Sce.PlayStation.HighLevel.UI.UIDebug.ForceMode.ForceDisabled">
            <summary>強制的にすべて無効にする</summary>
        </member>
        <member name="T:Sce.PlayStation.HighLevel.UI.UIFont">
            <summary>UIで使用するフォントクラス</summary>
            <remarks>システム内で Core.Imaging.Font クラスのオブジェクトを生成しキャッシュします。
            UISystem にピクセル密度が設定されている場合はフォントサイズもピクセル密度に応じてスケールされます。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.#ctor">
            <summary>UIFont のコンストラクタ (UIのデフォルト値から作成)</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.#ctor(System.String,System.Int32,Sce.PlayStation.Core.Imaging.FontStyle)">
            <summary>UIFont のコンストラクタ(ファイル名とサイズとスタイルから)</summary>
            <param name="filename">フォントのファイル名</param>
            <param name="size">サイズ</param>
            <param name="style">スタイル</param>
            <exception cref="T:System.ArgumentOutOfRangeException">size が 1～1024 の範囲外です。</exception>
            <remarks>引数 size は 1～1024 の範囲に収まっている必要があります。またフォントによって小さすぎるサイズで生成できない場合があります。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.#ctor(Sce.PlayStation.Core.Imaging.FontAlias,System.Int32,Sce.PlayStation.Core.Imaging.FontStyle)">
            <summary>UIFont のコンストラクタ(別名とサイズとスタイルから)</summary>
            <param name="alias">フォントの別名</param>
            <param name="size">サイズ</param>
            <param name="style">スタイル</param>
            <exception cref="T:System.ArgumentOutOfRangeException">size が 1～1024 の範囲外です。</exception>
            <remarks>引数 size は 1～1024 の範囲に収まっている必要があります。またフォントによって小さすぎるサイズで生成できない場合があります。</remarks>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.GetFont">
            <summary>UIFont から Core.Imaging.Font クラスを取得します</summary>
            <remarks>キャッシュされている Core.Imaging.Font の ShallowClone を返します。</remarks>
            <returns>Font オブジェクト</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.ClearCache">
            <summary>キャッシュされている Core.Imaging.Font クラスのオブジェクトをすべて解放します。</summary>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.op_Implicit(Sce.PlayStation.HighLevel.UI.UIFont)~Sce.PlayStation.Core.Imaging.Font">
            @internal
            <summary></summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.op_Implicit(Sce.PlayStation.Core.Imaging.Font)~Sce.PlayStation.HighLevel.UI.UIFont">
            @internal
            <summary></summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.GetHashCode">
            <summary>ハッシュコードを返す </summary>
            <returns>ハッシュコード</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.Equals(System.Object)">
            <summary>対象と自分自身が等価かどうか</summary>
            <param name="obj">比較対象</param>
            <returns>比較結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.Equals(Sce.PlayStation.HighLevel.UI.UIFont)">
            <summary>対象と自分自身が等価かどうか</summary>
            <param name="uifont">比較対象</param>
            <returns>比較結果</returns>
        </member>
        <member name="M:Sce.PlayStation.HighLevel.UI.UIFont.ToString">
            <summary>文字列を返す</summary>
            <returns>"フォント名, フォントスタイル, フォントサイズ" 形式の文字列</returns>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIFont.FileName">
            <summary>フォントのファイル名</summary>
            <remarks>null が設定されている場合は AliasName の値が使用されます。
            フォントファイルが正しいかどうかの評価は初めて描画される時に行われます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIFont.AliasName">
            <summary>フォントの別名</summary>
            <remarks>FileName が null の場合のみこの値が使用されます。</remarks>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIFont.Size">
            <summary>フォントサイズ</summary>
            <remarks>引数 size は 1～1024 の範囲に収まっている必要があります。またフォントによって小さすぎるサイズで生成できない場合があります。</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">size が 1～1024 の範囲外です。</exception>
        </member>
        <member name="P:Sce.PlayStation.HighLevel.UI.UIFont.Style">
            <summary>フォントスタイル</summary>
        </member>
    </members>
</doc>
